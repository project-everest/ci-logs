/bin/bash: krml: command not found
make: *** [Makefile:78: extracted/Makefile.include] Error 127
make: *** Waiting for unfinished jobs....
/bin/bash: krml: command not found
make: *** [Makefile:84: uint128/Makefile.include] Error 127
dos2unix: converting file parser/parse.fsi to Unix format...
Warning: you are using the standard library and/or the %inline keyword. We
recommend switching on --infer in order to avoid obscure type error messages.
warning: CRLF will be replaced by LF in src/parser/parse.fsy.
The file will have its original line endings in your working directory.
FStar.Monotonic.Witnessed.fst(292,47-292,49): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.Witnessed.fsti(28,70-28,85))
FStar.Monotonic.Witnessed.fst(296,44-296,70): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.Witnessed.fsti(35,39-35,74))
FStar.Monotonic.Witnessed.fst(298,42-298,44): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.Witnessed.fsti(40,37-40,100))
FStar.Monotonic.Witnessed.fst(303,6-303,95): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.Witnessed.fst(302,30-302,67))
FStar.Monotonic.Witnessed.fst(307,40-307,42): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.Witnessed.fsti(52,75-52,110))
FStar.Monotonic.Witnessed.fst(312,6-312,15): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.Monotonic.Witnessed.fst(106,50-106,55))
FStar.Monotonic.Witnessed.fst(319,6-319,18): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.Monotonic.Witnessed.fst(211,63-211,83))
FStar.Monotonic.Witnessed.fst(323,45-323,47): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.Witnessed.fsti(70,74-70,114))
FStar.List.Tot.Base.fst(265,10-265,12): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type m:
Prims.list a
{ forall (u22337: FStar.Pervasives.Native.option (x: Prims.unit{Prims.hasEq a})).
FStar.List.Tot.Base.mem_filter_spec f m u22337 }; got type Prims.list a (see also FStar.List.Tot.Base.fst(263,86-263,107))
FStar.List.Tot.Base.fst(275,2-277,4): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.List.Tot.Base.fst(273,11-273,16))
FStar.List.Tot.Base.fst(265,10-265,12): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type m:
Prims.list a
{ forall (u57327: FStar.Pervasives.Native.option (x: Prims.unit{Prims.hasEq a})).
FStar.List.Tot.Base.mem_filter_spec f m u57327 }; got type Prims.list a (see also FStar.List.Tot.Base.fst(263,86-263,107))
FStar.List.Tot.Properties.fst(858,2-858,37): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.List.Tot.Properties.fst(856,12-856,18))
FStar.List.Tot.Properties.fst(858,2-858,37): (Warning 252) could not prove post-condition (see also FStar.List.Tot.Properties.fst(856,12-856,18))
FStar.List.Tot.Properties.fst(887,2-888,24): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.List.Tot.Properties.fst(886,12-886,18))
FStar.OrdSet.fst(48,16-48,18): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Prims.eqtype; got type Type (see also prims.fst(27,21-27,28))
FStar.Monotonic.HyperStack.fst(106,4-106,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.HyperStack.fst(105,12-105,46))
FStar.Monotonic.HyperStack.fst(113,4-113,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.HyperStack.fst(47,18-47,51))
FStar.Monotonic.HyperStack.fst(121,4-121,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.HyperStack.fst(119,19-119,41))
FStar.Monotonic.HyperStack.fst(134,4-134,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.HyperStack.fst(129,20-129,76))
FStar.Monotonic.HyperStack.fst(142,4-142,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.HyperStack.fst(141,9-141,59))
FStar.Monotonic.HyperStack.fst(154,4-154,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.HyperStack.fst(151,19-151,69))
FStar.Monotonic.HyperStack.fst(165,4-165,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.HyperStack.fst(164,106-164,142))
FStar.Monotonic.HyperStack.fst(181,4-181,25): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.HyperStack.fst(180,19-180,45))
FStar.Monotonic.HyperStack.fst(307,55-307,57): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.HyperStack.fst(306,17-306,31))
FStar.Monotonic.HyperStack.fst(373,4-373,33): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.Monotonic.HyperStack.fst(38,12-41,66))
FStar.Monotonic.HyperStack.fst(433,6-433,8): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.HyperStack.fst(432,13-432,48))
FStar.Monotonic.HyperStack.fst(517,5-517,7): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.HyperStack.fst(516,11-516,35))
FStar.Monotonic.HyperStack.fst(373,4-373,33): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.Monotonic.HyperStack.fst(38,12-41,66))
FStar.Seq.Properties.fst(474,2-477,29): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Seq.Properties.fst(472,20-472,28))
FStar.Fin.fst(36,2-51,18): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Fin.fst(33,41-33,68))
FStar.Fin.fst(36,2-51,18): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Fin.fst(33,41-33,68))
FStar.HyperStack.ST.fst(183,46-183,48): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.HyperStack.ST.fst(182,72-182,104))
FStar.HyperStack.ST.fst(187,99-187,101): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.HyperStack.ST.fst(148,4-148,70))
FStar.HyperStack.ST.fst(190,49-190,51): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.HyperStack.ST.fst(189,78-189,112))
FStar.HyperStack.ST.fst(195,4-195,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.HyperStack.ST.fst(148,4-148,70))
FStar.HyperStack.ST.fst(199,57-199,59): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.HyperStack.ST.fst(198,79-198,115))
FStar.HyperStack.ST.fst(204,4-204,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.HyperStack.ST.fst(148,4-148,70))
FStar.HyperStack.ST.fst(208,63-208,65): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.HyperStack.ST.fst(207,85-207,127))
FStar.HyperStack.ST.fst(214,4-214,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.HyperStack.ST.fst(148,4-148,70))
FStar.HyperStack.ST.fst(611,4-618,38): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.HyperStack.ST.fst(261,91-261,115))
FStar.HyperStack.ST.fst(638,4-638,14): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.HyperStack.ST.fst(101,76-101,87))
FStar.HyperStack.ST.fst(646,52-646,54): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Prims.squash (forall (x: c). FStar.HyperStack.ST.witnessed (p' x)); got type Prims.unit (see also FStar.HyperStack.ST.fst(646,32-646,48))
FStar.Monotonic.Map.fst(28,2-29,71): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.Preorder.fst(12,40-12,56))
FStar.Monotonic.Map.fst(66,4-66,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.HyperStack.ST.fst(605,56-605,60))
FStar.Monotonic.Map.fst(82,6-82,8): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.HyperStack.ST.fst(526,54-526,72))
FStar.Monotonic.Map.fst(105,8-105,18): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.HyperStack.ST.fst(605,56-605,60))
FStar.Monotonic.Seq.fst(28,4-29,111): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.Preorder.fst(12,40-12,56))
FStar.Monotonic.Seq.fst(41,4-41,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.Seq.fst(39,12-39,36))
FStar.Monotonic.Seq.fst(61,4-61,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.HyperStack.ST.fst(605,56-605,60))
FStar.Monotonic.Seq.fst(103,4-103,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.HyperStack.ST.fst(605,56-605,60))
FStar.Monotonic.Seq.fst(248,4-248,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Monotonic.Seq.fst(247,8-247,35))
FStar.Monotonic.Seq.fst(260,4-260,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.HyperStack.ST.fst(605,56-605,60))
FStar.Monotonic.Seq.fst(274,4-274,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.HyperStack.ST.fst(605,56-605,60))
FStar.Monotonic.Seq.fst(303,38-303,44): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.Monotonic.Seq.fst(303,45-303,62))
FStar.Monotonic.Seq.fst(344,4-344,46): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.HyperStack.ST.fst(605,56-605,60))
LowStar.BufferView.fst(79,31-79,33): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type FStar.Seq.Properties.lseq (FStar.Pervasives.dfst vb)
(LowStar.Buffer.length (LowStar.BufferView.as_buffer vb)); got type FStar.Seq.Base.seq (FStar.Pervasives.dfst vb) (see also FStar.Seq.Properties.fst(24,19-24,36))
LowStar.BufferView.fst(84,4-98,24): (Warning 252) (Hint-replay failed): could not prove post-condition (see also LowStar.BufferView.fst(82,11-82,41))
LowStar.BufferView.fst(156,38-156,40): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type FStar.Seq.Properties.lseq (FStar.Pervasives.dfst vb)
(LowStar.Buffer.length (LowStar.BufferView.as_buffer vb)); got type FStar.Seq.Base.seq (FStar.Pervasives.dfst vb) (see also FStar.Seq.Properties.fst(24,19-24,36))
FStar.Tactics.Effect.fst(21,14-21,15): (Warning 266) Not an embedded tactic result: match
(match
FStar.Reflection.Data.Tv_App (`Prims.squash) ((`1 + 1 == 2), FStar.Reflection.Data.Q_Explicit)
with
| FStar.Reflection.Data.Tv_App squash (g, _) ->
reify ((let _ =
FStar.Tactics.Builtins.inspect squash
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_FVar squash ->
((if
FStar.Reflection.Derived.fv_to_string squash =
FStar.Reflection.Derived.flatten_name FStar.Reflection.Const.squash_qn
then
(let _ =
FStar.Tactics.Builtins.inspect g
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_App eq_type_x (y, _) ->
(let _ =
FStar.Tactics.Builtins.inspect eq_type_x
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_App eq_type (x, _) ->
(let _ =
FStar.Tactics.Builtins.inspect eq_type
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_App eq (_, _) ->
(let _ =
FStar.Tactics.Builtins.inspect eq
<:
FStar.Tactics.Effect.TAC
FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_FVar eq ->
((if
FStar.Reflection.Derived.fv_to_string eq
=
FStar.Reflection.Derived.flatten_name FStar.Reflection.Const.eq2_qn

then
x, y
<:
Prims.PURE
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term)
else
FStar.Tactics.Builtins.fail "not an equality"

<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term *
FStar.Reflection.Types.term
| _ ->
FStar.Tactics.Builtins.fail "not an app2 of fvar: "

<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term *
FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term)
| _ ->
FStar.Tactics.Builtins.fail "not an app3"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term)
| _ ->
FStar.Tactics.Builtins.fail "not an app2"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term)
| _ ->
FStar.Tactics.Builtins.fail "not an app under squash"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term)
else
FStar.Tactics.Builtins.fail "not a squash"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term
| _ ->
FStar.Tactics.Builtins.fail "not an app of fvar at top level"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC (FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC (FStar.Reflection.Types.term * FStar.Reflection.Types.term))
| _ ->
reify (FStar.Tactics.Builtins.fail "not an app at top level"
<:
FStar.Tactics.Effect.TAC (FStar.Reflection.Types.term * FStar.Reflection.Types.term))) "(((proofstate)))"

with
| FStar.Tactics.Result.Success a ps' ->
let ps' =
FStar.Tactics.Types.set_proofstate_range ps'
(FStar.Range.prims_to_fstar_range FStar.Tactics.PatternMatching.fst(80,15-81,66))
in
(let () = FStar.Tactics.Types.tracepoint ps' in
(fun _ ->
reify (((let l, r = _ in
FStar.Tactics.Builtins.print (FStar.Reflection.Basic.term_to_string l ^
" / " ^ FStar.Reflection.Basic.term_to_string r)
<:
FStar.Tactics.Effect.TAC Prims.unit)
<:
FStar.Tactics.Effect.TAC Prims.unit)
<:
Prims.unit)) a
(FStar.Tactics.Types.decr_depth ps'))
<:
FStar.Tactics.Result.__result Prims.unit
| FStar.Tactics.Result.Failed msg ps' -> FStar.Tactics.Result.Failed msg ps' (see also FStar.Tactics.Effect.fst(20,12-20,13))
FStar.Tactics.PatternMatching.fst(79,2-79,18): (Error 228) user tactic failed: Tactic got stuck! Please file a bug report with a minimal reproduction of this issue.
match
(match
FStar.Reflection.Data.Tv_App (`Prims.squash) ((`1 + 1 == 2), FStar.Reflection.Data.Q_Explicit)
with
| FStar.Reflection.Data.Tv_App squash (g, _) ->
reify ((let _ =
FStar.Tactics.Builtins.inspect squash
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_FVar squash ->
((if
FStar.Reflection.Derived.fv_to_string squash =
FStar.Reflection.Derived.flatten_name FStar.Reflection.Const.squash_qn
then
(let _ =
FStar.Tactics.Builtins.inspect g
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_App eq_type_x (y, _) ->
(let _ =
FStar.Tactics.Builtins.inspect eq_type_x
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_App eq_type (x, _) ->
(let _ =
FStar.Tactics.Builtins.inspect eq_type
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_App eq (_, _) ->
(let _ =
FStar.Tactics.Builtins.inspect eq
<:
FStar.Tactics.Effect.TAC
FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_FVar eq ->
((if
FStar.Reflection.Derived.fv_to_string eq
=
FStar.Reflection.Derived.flatten_name FStar.Reflection.Const.eq2_qn

then
x, y
<:
Prims.PURE
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term)
else
FStar.Tactics.Builtins.fail "not an equality"

<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term *
FStar.Reflection.Types.term
| _ ->
FStar.Tactics.Builtins.fail "not an app2 of fvar: "

<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term *
FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term)
| _ ->
FStar.Tactics.Builtins.fail "not an app3"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term)
| _ ->
FStar.Tactics.Builtins.fail "not an app2"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term)
| _ ->
FStar.Tactics.Builtins.fail "not an app under squash"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term)
else
FStar.Tactics.Builtins.fail "not a squash"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term
| _ ->
FStar.Tactics.Builtins.fail "not an app of fvar at top level"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC (FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC (FStar.Reflection.Types.term * FStar.Reflection.Types.term))
| _ ->
reify (FStar.Tactics.Builtins.fail "not an app at top level"
<:
FStar.Tactics.Effect.TAC (FStar.Reflection.Types.term * FStar.Reflection.Types.term))) "(((proofstate)))"

with
| FStar.Tactics.Result.Success a ps' ->
let ps' =
FStar.Tactics.Types.set_proofstate_range ps'
(FStar.Range.prims_to_fstar_range FStar.Tactics.PatternMatching.fst(80,15-81,66))
in
(let () = FStar.Tactics.Types.tracepoint ps' in
(fun _ ->
reify (((let l, r = _ in
FStar.Tactics.Builtins.print (FStar.Reflection.Basic.term_to_string l ^
" / " ^ FStar.Reflection.Basic.term_to_string r)
<:
FStar.Tactics.Effect.TAC Prims.unit)
<:
FStar.Tactics.Effect.TAC Prims.unit)
<:
Prims.unit)) a
(FStar.Tactics.Types.decr_depth ps'))
<:
FStar.Tactics.Result.__result Prims.unit
| FStar.Tactics.Result.Failed msg ps' -> FStar.Tactics.Result.Failed msg ps'
1 error was reported (see above)
make[3]: *** [gmake/Makefile.tmpl:29: FStar.Tactics.PatternMatching.fst.checked] Error 1
FStar.Integers.fst(440,5-454,43): (Warning 252) (Hint-replay failed): Patterns are incomplete
LowStar.Buffer.fst(314,30-314,56): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type FStar.UInt.uint_t FStar.UInt32.n; got type Prims.nat (see also FStar.UInt.fst(52,28-52,36))
LowStar.Buffer.fst(321,47-321,49): (Warning 252) (Hint-replay failed): could not prove post-condition (see also LowStar.Buffer.fsti(502,4-502,81))
LowStar.Buffer.fst(335,43-335,45): (Warning 252) (Hint-replay failed): could not prove post-condition (see also LowStar.Buffer.fsti(519,4-519,72))
LowStar.Buffer.fst(482,4-486,44): (Warning 252) (Hint-replay failed): could not prove post-condition (see also LowStar.Buffer.fsti(721,11-721,28))
LowStar.Buffer.fst(490,2-496,42): (Warning 252) (Hint-replay failed): could not prove post-condition (see also LowStar.Buffer.fsti(747,4-747,21))
LowStar.Buffer.fst(548,2-553,3): (Warning 252) (Hint-replay failed): could not prove post-condition (see also LowStar.Buffer.fst(543,4-543,46))
LowStar.Buffer.fst(578,2-584,3): (Warning 252) (Hint-replay failed): could not prove post-condition (see also LowStar.Buffer.fsti(918,4-918,35))
FStar.Tactics.Typeclasses.fst(83,4-128,16): (Warning 252) (Hint-replay failed): Patterns are incomplete
FStar.Tactics.Typeclasses.fst(83,4-128,16): (Warning 252) (Hint-replay failed): Patterns are incomplete
FStar.Reflection.Arith.fst(116,30-116,32): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type t: FStar.Reflection.Types.term{t << t}; got type FStar.Reflection.Types.term (see also FStar.Reflection.Arith.fst(110,4-153,14))
FStar.Reflection.Arith.fst(116,30-116,32): (Warning 252) Subtyping check failed; expected type t: FStar.Reflection.Types.term{t << t}; got type FStar.Reflection.Types.term (see also FStar.Reflection.Arith.fst(110,4-153,14))
FStar.Reflection.Arith.fst(116,30-116,32): (Warning 252) Subtyping check failed; expected type t: FStar.Reflection.Types.term{t << t}; got type FStar.Reflection.Types.term (see also FStar.Reflection.Arith.fst(110,4-153,14))
FStar.Buffer.fst(65,4-65,10): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Prims.nat; got type FStar.UInt.uint_t FStar.UInt32.n (see also prims.fst(408,17-408,23))
(Warning 252) (Hint-replay failed): assertion failed
FStar.Printf.fst(179,21-179,98): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type (match
let FStar.Pervasives.Native.Some v =
match FStar.String.list_of_string s with
| [] -> FStar.Pervasives.Native.Some []
| ['%'] -> FStar.Pervasives.Native.None
| '%' :: 'u' :: s' ->
(match s' with
| 'y' :: s'' ->
(match FStar.Printf.parse_format s'' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U8) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 's' :: s'' ->
(match FStar.Printf.parse_format s'' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U16) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'l' :: s'' ->
(match FStar.Printf.parse_format s'' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U32) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'L' :: s'' ->
(match FStar.Printf.parse_format s'' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U64) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| _ -> FStar.Pervasives.Native.None)
<:
FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir)
| '%' :: 'X' :: s' ->
(match FStar.Printf.no_extensions s' with
| FStar.Pervasives.Native.Some (ext, rest) ->
(match FStar.Printf.parse_format rest FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Extension ext) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| _ -> FStar.Pervasives.Native.None)
<:
FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir)
| '%' :: c :: s' ->
(match c with
| '%' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Lit '%' :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'b' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Bool) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'd' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Int) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'c' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Char) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 's' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.String) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'y' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I8) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'i' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I16) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'l' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I32) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'L' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I64) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| _ -> FStar.Pervasives.Native.None)
<:
FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir)
| c :: s' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Lit c :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
in
v
with
| [] -> Prims.string
| FStar.Printf.Lit _ :: ds' -> FStar.Printf.dir_type ds'
| FStar.Printf.Arg a :: ds' -> _: FStar.Printf.arg_type a -> Prims.Tot (FStar.Printf.dir_type ds')
)
<:
Type0; got type FStar.Printf.dir_type (Some?.v (FStar.Printf.parse_format_string s FStar.Printf.no_extensions))
FStar.Printf.fst(190,21-190,94): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type (match
let FStar.Pervasives.Native.Some v =
match FStar.String.list_of_string s with
| [] -> FStar.Pervasives.Native.Some []
| ['%'] -> FStar.Pervasives.Native.None
| '%' :: 'u' :: s' ->
(match s' with
| 'y' :: s'' ->
(match FStar.Printf.parse_format s'' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U8) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 's' :: s'' ->
(match FStar.Printf.parse_format s'' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U16) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'l' :: s'' ->
(match FStar.Printf.parse_format s'' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U32) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'L' :: s'' ->
(match FStar.Printf.parse_format s'' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U64) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| _ -> FStar.Pervasives.Native.None)
<:
FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir)
| '%' :: 'X' :: s' ->
(match parse_ext s' with
| FStar.Pervasives.Native.Some (ext, rest) ->
(match FStar.Printf.parse_format rest parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Extension ext) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| _ -> FStar.Pervasives.Native.None)
<:
FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir)
| '%' :: c :: s' ->
(match c with
| '%' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Lit '%' :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'b' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Bool) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'd' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Int) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'c' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Char) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 's' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.String) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'y' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I8) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'i' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I16) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'l' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I32) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'L' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I64) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| _ -> FStar.Pervasives.Native.None)
<:
FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir)
| c :: s' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Lit c :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
in
v
with
| [] -> Prims.string
| FStar.Printf.Lit _ :: ds' -> FStar.Printf.dir_type ds'
| FStar.Printf.Arg a :: ds' -> _: FStar.Printf.arg_type a -> Prims.Tot (FStar.Printf.dir_type ds')
)
<:
Type0; got type FStar.Printf.dir_type (Some?.v (FStar.Printf.parse_format_string s parse_ext))
(Warning 252) (Hint-replay failed): assertion failed
FStar.Printf.fst(179,21-179,98): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type (match
let FStar.Pervasives.Native.Some v =
match FStar.String.list_of_string s with
| [] -> FStar.Pervasives.Native.Some []
| ['%'] -> FStar.Pervasives.Native.None
| '%' :: 'u' :: s' ->
(match s' with
| 'y' :: s'' ->
(match FStar.Printf.parse_format s'' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U8) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 's' :: s'' ->
(match FStar.Printf.parse_format s'' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U16) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'l' :: s'' ->
(match FStar.Printf.parse_format s'' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U32) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'L' :: s'' ->
(match FStar.Printf.parse_format s'' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U64) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| _ -> FStar.Pervasives.Native.None)
<:
FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir)
| '%' :: 'X' :: s' ->
(match FStar.Printf.no_extensions s' with
| FStar.Pervasives.Native.Some (ext, rest) ->
(match FStar.Printf.parse_format rest FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Extension ext) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| _ -> FStar.Pervasives.Native.None)
<:
FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir)
| '%' :: c :: s' ->
(match c with
| '%' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Lit '%' :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'b' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Bool) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'd' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Int) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'c' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Char) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 's' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.String) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'y' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I8) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'i' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I16) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'l' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I32) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'L' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I64) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| _ -> FStar.Pervasives.Native.None)
<:
FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir)
| c :: s' ->
(match FStar.Printf.parse_format s' FStar.Printf.no_extensions with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Lit c :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
in
v
with
| [] -> Prims.string
| FStar.Printf.Lit _ :: ds' -> FStar.Printf.dir_type ds'
| FStar.Printf.Arg a :: ds' -> _: FStar.Printf.arg_type a -> Prims.Tot (FStar.Printf.dir_type ds')
)
<:
Type0; got type FStar.Printf.dir_type (Some?.v (FStar.Printf.parse_format_string s FStar.Printf.no_extensions))
FStar.Printf.fst(190,21-190,94): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type (match
let FStar.Pervasives.Native.Some v =
match FStar.String.list_of_string s with
| [] -> FStar.Pervasives.Native.Some []
| ['%'] -> FStar.Pervasives.Native.None
| '%' :: 'u' :: s' ->
(match s' with
| 'y' :: s'' ->
(match FStar.Printf.parse_format s'' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U8) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 's' :: s'' ->
(match FStar.Printf.parse_format s'' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U16) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'l' :: s'' ->
(match FStar.Printf.parse_format s'' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U32) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'L' :: s'' ->
(match FStar.Printf.parse_format s'' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.U64) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| _ -> FStar.Pervasives.Native.None)
<:
FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir)
| '%' :: 'X' :: s' ->
(match parse_ext s' with
| FStar.Pervasives.Native.Some (ext, rest) ->
(match FStar.Printf.parse_format rest parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Extension ext) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| _ -> FStar.Pervasives.Native.None)
<:
FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir)
| '%' :: c :: s' ->
(match c with
| '%' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Lit '%' :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'b' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Bool) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'd' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Int) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'c' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.Char) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 's' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.String) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'y' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I8) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'i' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I16) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'l' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I32) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| 'L' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Arg (FStar.Printf.I64) :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
| _ -> FStar.Pervasives.Native.None)
<:
FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir)
| c :: s' ->
(match FStar.Printf.parse_format s' parse_ext with
| FStar.Pervasives.Native.None  -> FStar.Pervasives.Native.None
| FStar.Pervasives.Native.Some ds ->
FStar.Pervasives.Native.Some (FStar.Printf.Lit c :: ds))
<:
Prims.Tot (FStar.Pervasives.Native.option (Prims.list FStar.Printf.dir))
in
v
with
| [] -> Prims.string
| FStar.Printf.Lit _ :: ds' -> FStar.Printf.dir_type ds'
| FStar.Printf.Arg a :: ds' -> _: FStar.Printf.arg_type a -> Prims.Tot (FStar.Printf.dir_type ds')
)
<:
Type0; got type FStar.Printf.dir_type (Some?.v (FStar.Printf.parse_format_string s parse_ext))
LowStar.ToFStarBuffer.fst(285,2-286,19): (Warning 252) (Hint-replay failed): could not prove post-condition (see also LowStar.ToFStarBuffer.fst(281,13-281,49))
FStar.ModifiesGen.fst(320,9-320,109): (Warning 252) (Hint-replay failed): assertion failed
FStar.ModifiesGen.fst(343,2-343,51): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(217,2-217,20))
FStar.ModifiesGen.fst(354,2-354,111): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(224,11-224,31))
FStar.ModifiesGen.fst(356,42-356,44): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(231,11-231,45))
FStar.ModifiesGen.fst(366,8-366,14): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(366,15-366,50))
FStar.ModifiesGen.fst(373,33-373,35): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(244,2-244,27))
FStar.ModifiesGen.fst(375,43-375,45): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(253,11-253,65))
FStar.ModifiesGen.fst(387,2-387,4): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fst(385,2-385,104))
FStar.ModifiesGen.fst(389,68-389,70): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(264,11-264,85))
FStar.ModifiesGen.fst(391,66-391,68): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(275,11-275,81))
FStar.ModifiesGen.fst(393,87-393,89): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(285,11-285,105))
FStar.ModifiesGen.fst(395,84-395,86): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(293,11-293,103))
FStar.ModifiesGen.fst(404,91-404,93): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(311,11-311,111))
FStar.ModifiesGen.fst(494,35-494,37): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(332,11-332,36))
FStar.ModifiesGen.fst(519,2-528,30): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(346,11-346,33))
FStar.ModifiesGen.fst(538,2-538,173): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(379,11-379,113))
FStar.ModifiesGen.fst(540,91-540,93): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(390,11-390,67))
FStar.ModifiesGen.fst(544,78-544,80): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(414,24-414,42))
FStar.ModifiesGen.fst(548,2-548,165): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(422,11-422,105))
FStar.ModifiesGen.fst(561,73-561,75): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(430,2-430,70))
FStar.ModifiesGen.fst(563,73-563,75): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(433,2-433,79))
FStar.ModifiesGen.fst(573,92-573,94): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(438,2-438,91))
FStar.ModifiesGen.fst(575,72-575,74): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(443,2-443,78))
FStar.ModifiesGen.fst(577,94-577,96): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(448,2-448,95))
FStar.ModifiesGen.fst(579,78-579,80): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(453,2-453,73))
FStar.ModifiesGen.fst(848,4-848,9): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(805,15-805,50))
FStar.ModifiesGen.fst(899,20-899,25): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fsti(574,15-574,55))
FStar.ModifiesGen.fst(915,55-915,57): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(624,4-624,20))
FStar.ModifiesGen.fst(923,2-923,8): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(923,9-923,49))
FStar.ModifiesGen.fst(928,62-928,64): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(669,11-669,31))
FStar.ModifiesGen.fst(933,2-933,142): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(681,11-681,31))
FStar.ModifiesGen.fst(939,79-939,81): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(701,11-701,45))
FStar.ModifiesGen.fst(941,72-941,74): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(712,11-712,32))
FStar.ModifiesGen.fst(955,2-955,23): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fsti(657,33-657,51))
FStar.ModifiesGen.fst(983,2-983,8): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(983,9-983,48))
FStar.ModifiesGen.fst(1028,2-1028,8): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(1028,9-1028,121))
FStar.ModifiesGen.fst(1036,2-1036,55): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fst(1035,2-1035,45))
FStar.ModifiesGen.fst(1052,2-1052,55): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fst(1051,2-1051,66))
FStar.ModifiesGen.fst(1067,2-1067,23): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fsti(657,33-657,51))
FStar.ModifiesGen.fst(1147,4-1147,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fst(652,34-652,60))
FStar.ModifiesGen.fst(1174,2-1174,35): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(1141,4-1141,58))
FStar.ModifiesGen.fst(1212,20-1212,22): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(478,34-478,59))
FStar.ModifiesGen.fst(1248,2-1248,8): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(1248,76-1248,95))
FStar.ModifiesGen.fst(1267,9-1267,43): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(1242,16-1242,95))
FStar.ModifiesGen.fst(1297,9-1297,41): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type y: FStar.GSet.set Prims.nat {FStar.GSet.subset (non_live_addrs' r') y}; got type FStar.GSet.set Prims.nat (see also FStar.ModifiesGen.fst(1295,83-1295,117))
FStar.ModifiesGen.fst(1340,2-1340,8): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(1340,9-1340,106))
FStar.ModifiesGen.fst(1351,2-1351,104): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fst(1350,11-1350,58))
FStar.ModifiesGen.fst(1375,2-1375,104): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fst(1374,11-1374,97))
FStar.ModifiesGen.fst(1385,2-1385,36): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(1242,16-1242,95))
FStar.ModifiesGen.fst(1408,12-1408,33): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(1286,13-1286,53))
FStar.ModifiesGen.fst(1435,4-1435,10): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(1435,11-1435,53))
FStar.ModifiesGen.fst(1466,42-1466,44): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(939,11-939,69))
FStar.ModifiesGen.fst(1468,46-1468,48): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(943,11-943,73))
FStar.ModifiesGen.fst(1476,2-1476,64): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(954,12-954,71))
FStar.ModifiesGen.fst(1484,2-1484,20): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fsti(223,35-223,53))
FStar.ModifiesGen.fst(1716,2-1716,4): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fst(1714,2-1714,73))
FStar.ModifiesGen.fst(1754,2-1754,8): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(1754,9-1754,39))
FStar.ModifiesGen.fst(1812,2-1812,8): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(1814,4-1814,37))
FStar.ModifiesGen.fst(1850,2-1850,8): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(1853,4-1853,53))
FStar.ModifiesGen.fst(1876,2-1884,39): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fst(1875,11-1875,42))
FStar.ModifiesGen.fst(1921,4-1921,10): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(1921,11-1921,74))
FStar.ModifiesGen.fst(1943,4-1943,10): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(1943,11-1954,7))
FStar.ModifiesGen.fst(1984,4-1984,21): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type aux:
FStar.Ghost.erased (FStar.GSet.set (FStar.ModifiesGen.aloc (c b)))
{ FStar.GSet.subset (FStar.ModifiesGen.aloc_domain (c b) regions live_addrs)
(FStar.Ghost.reveal aux) /\
FStar.GSet.subset (FStar.Ghost.reveal aux)
(FStar.ModifiesGen.aloc_domain (c b) regions (fun _ -> FStar.GSet.complement FStar.GSet.empty)
) }; got type FStar.Ghost.erased (FStar.GSet.set (FStar.ModifiesGen.aloc (c b))) (see also FStar.ModifiesGen.fst(30,8-30,71))
FStar.ModifiesGen.fst(1993,9-1993,119): (Warning 252) (Hint-replay failed): assertion failed
FStar.ModifiesGen.fst(1996,9-1996,121): (Warning 252) (Hint-replay failed): assertion failed
FStar.ModifiesGen.fst(2067,2-2073,167): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(1109,2-1109,78))
FStar.ModifiesGen.fst(2084,2-2084,8): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(2084,21-2084,70))
FStar.ModifiesGen.fst(2093,2-2093,8): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(2093,21-2093,68))
make[3]: Target 'verify-core' not remade because of errors.
make[2]: *** [Makefile:12: all] Error 2
make[1]: *** [Makefile:193: fstarlib] Error 2
make: *** [Makefile:176: utest-prelude] Error 2
Command exited with non-zero status 2
11.66user 46.84system 13:51.05elapsed 7%CPU (0avgtext+0avgdata 1384265216maxresident)k
0inputs+0outputs (5664782major+0minor)pagefaults 0swaps
