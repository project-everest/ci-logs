This is ../everest-ci/ci
Working directory: /tmp/fstar
About to run: fstar_and_friends uregressions
BUILD_SOURCEBRANCHNAME:
BUILD_DEFINITIONNAME:
BUILD_BUILDID:
DEFINITIONNAME:
Z3 is /home/everbld/everest/z3-4.5.1.1f29cebd4df6-x64-win/bin/z3
make fstar-in-fsharp
Switching to vale to fstar_ci
Removing tools/FsLexYacc/
make[1]: Entering directory '/tmp/fstar/src'
VS/.nuget/NuGet.exe restore VS/FStar.sln
All packages listed in packages.config are already installed.
make[1]: Leaving directory '/tmp/fstar/src'
HEAD is now at d7e02c2 flip flags to account for F* changes in defaults
make -C VS install-packages
Switching to mitls-fstar origin/fstar-master
Switching to KreMLin origin/fstar-master
Switching to HACL origin/fstar-master
[ -d packages ] || make update-nuget
HEAD is now at bf867cb Fix a subtle visibility issue and back to a green on CI, hopefully
HEAD is now at d10f9033 remove fstar_home option
HEAD is now at a4b54d86 Bundle
make[2]: Entering directory '/tmp/fstar/src/VS'
.nuget/NuGet.exe restore FStar.sln
All packages listed in packages.config are already installed.
find packages -name '*.exe' -exec chmod +x '{}' ';'
make[2]: Leaving directory '/tmp/fstar/src/VS'
Restoring NuGet package FsLexYacc.6.1.0.
Restoring NuGet package FsLexYacc.Runtime.6.1.0.
Adding package 'FsLexYacc.6.1.0' to folder 'C:\cygwin64\tmp\fstar\vale\tools\FsLexYacc'
Adding package 'FsLexYacc.Runtime.6.1.0' to folder 'C:\cygwin64\tmp\fstar\vale\tools\FsLexYacc'
Added package 'FsLexYacc.Runtime.6.1.0' to folder 'C:\cygwin64\tmp\fstar\vale\tools\FsLexYacc'
Added package 'FsLexYacc.6.1.0' to folder 'C:\cygwin64\tmp\fstar\vale\tools\FsLexYacc'

NuGet Config files used:
C:\Users\everbld\AppData\Roaming\NuGet\NuGet.Config
C:\Program Files (x86)\NuGet\Config\Microsoft.VisualStudio.Offline.config

Feeds used:
C:\Users\everbld\.nuget\packages\
https://api.nuget.org/v3/index.json
C:\Program Files (x86)\Microsoft SDKs\NuGetPackages\

Installed:
2 package(s) to packages.config projects
make: Entering directory '/tmp/fstar/kremlin'
ocamlbuild -I src -I lib -I parser -I kremlib -use-menhir -use-ocamlfind -classic-display -menhir "menhir --infer --explain" Kremlin.native Tests.native
ln -sf Kremlin.native krml
make: Leaving directory '/tmp/fstar/kremlin'
make[1]: Entering directory '/tmp/fstar/src'
./msbuild.bat /verbosity:minimal /p:Configuration=Release VS/FStar.sln
dos2unix: converting file parser/parse.fsi to Unix format...
**********************************************************************
** Visual Studio 2017 Developer Command Prompt v15.5.5
** Copyright (c) 2017 Microsoft Corporation
**********************************************************************
Microsoft (R) Build Engine version 15.5.180.51428 for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

basic -> C:\cygwin64\tmp\fstar\bin\basic.dll
Restoring NuGet packages...
To prevent NuGet from downloading packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages'.
All packages listed in packages.config are already installed.
prettyprint -> C:\cygwin64\tmp\fstar\bin\prettyprint.dll
parser -> C:\cygwin64\tmp\fstar\bin\parser.dll
syntax -> C:\cygwin64\tmp\fstar\bin\syntax.dll
tosyntax -> C:\cygwin64\tmp\fstar\bin\tosyntax.dll
typechecker -> C:\cygwin64\tmp\fstar\bin\typechecker.dll
format -> C:\cygwin64\tmp\fstar\bin\format.dll
reflection -> C:\cygwin64\tmp\fstar\bin\reflection.dll
extraction -> C:\cygwin64\tmp\fstar\bin\extraction.dll
fsdoc -> C:\cygwin64\tmp\fstar\bin\fsdoc.dll
smtencoding -> C:\cygwin64\tmp\fstar\bin\smtencoding.dll
tactics -> C:\cygwin64\tmp\fstar\bin\tactics.dll
C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\MSBuild\15.0\Bin\Microsoft.Common.CurrentVersion.targets(2041,5): warning MSB3277: Found conflicts between different versions of "FSharp.Core" that could not be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed. [C:\cygwin64\tmp\fstar\src\fstar\fstar.fsproj]
fstar -> C:\cygwin64\tmp\fstar\bin\fstar.exe
tests -> C:\cygwin64\tmp\fstar\bin\tests.exe
dos2unix parser/parse.fsi
chmod a+x ../bin/tests.exe
chmod a+x ../bin/fstar.exe
make[1]: Leaving directory '/tmp/fstar/src'
make fsharp-unit-tests
make[1]: Entering directory '/tmp/fstar/src'
../bin/tests.exe
Initializing ...
Testing the normalizer
0: ...
1: ...
2: ...
3: ...
4: ...
5: ...
6: ...
7: ...
8: ...
9: ...
10: ...
11: ...
12: ...
13: ...
14: ...
15: ...
16: ...
17: ...
18: ...
19: ...
20: ...
21: ...
22: ...
23: ...
1062: ...
Normalizer ok
Testing the unifier
0 ...Unify x
and x
1 ...Unify x
and y
2 ...Unify x
and (fun x -> x) x
3 ...Unify fun x -> x
and fun x -> x
4 ...Unify fun x -> x
and fun y -> y
5 ...Unify fun x _ -> x
and fun a _ -> a
6 ...Unify fun _ y _ -> y
and fun _ b _ -> b
7 ...Unify fun _ y -> y
and fun x _ -> x
8 ...Unify fun _ y _ -> y
and fun _ _ z -> z
9 ...Unify fun x -> (*?u319*) _ x
and fun x -> Prims.c_and x x
10 ...Unify fun x -> (*?u337*) _ x
and fun x y -> x + y
11 ...Unify x: Prims.int -> y: Prims.int{y == x} -> Prims.Tot Prims.bool
and x: Prims.int -> y: Prims.int -> Prims.Tot Prims.bool
12 ...Unify a: Type0 -> b: (_: a -> Prims.Tot Type0) -> x: a -> y: b x -> Prims.Tot Type0
and a: Type0 -> b: (_: a -> Prims.Tot Type0) -> x: a -> y: b x -> Prims.Tot Type0
13 ...Unify _ ()
and (*?u419*) _ ()
14 ...Unify _ ()
and (*?u428*) _ ()
Unifier ok
make[1]: Leaving directory '/tmp/fstar/src'
make boot-ocaml        #build the ocaml-snapshot
make -C ocaml-output all
warning: CRLF will be replaced by LF in src/parser/parse.fsy.
The file will have its original line endings in your working directory.
make[2]: Entering directory '/tmp/fstar/src/ocaml-output'
echo 'open FStar_Util' > FStar_Version.ml
echo 'let dummy () = ();;' >> FStar_Version.ml
echo 'FStar_Options._version := "0.9.6.0~alpha1";;' >> FStar_Version.ml
echo 'FStar_Options._platform := "Windows_x64";;' >> FStar_Version.ml
echo 'FStar_Options._compiler := "OCaml 4.05.0";;' >> FStar_Version.ml
echo 'FStar_Options._date := "2018-05-16T09:58:19-07:00";;' >> FStar_Version.ml
echo 'FStar_Options._commit:= "526789770 (dirty)";;' >> FStar_Version.ml
make[2]: Leaving directory '/tmp/fstar/src/ocaml-output'
make[2]: Entering directory '/tmp/fstar/src/ocaml-output'
# We are opening the same module twice but we need these modules
# open for the definition of tokens
echo "open Prims" > FStar_Parser_Parse.ml
echo "open FStar_Errors" >> FStar_Parser_Parse.ml
echo "open FStar_List" >> FStar_Parser_Parse.ml
echo "open FStar_Util" >> FStar_Parser_Parse.ml
echo "open FStar_Range" >> FStar_Parser_Parse.ml
echo "open FStar_Options" >> FStar_Parser_Parse.ml
echo "open FStar_Syntax_Syntax" >> FStar_Parser_Parse.ml
echo "open FStar_Parser_Const" >> FStar_Parser_Parse.ml
echo "open FStar_Syntax_Util" >> FStar_Parser_Parse.ml
echo "open FStar_Parser_AST" >> FStar_Parser_Parse.ml
echo "open FStar_Parser_Util" >> FStar_Parser_Parse.ml
echo "open FStar_Const" >> FStar_Parser_Parse.ml
echo "open FStar_Ident" >> FStar_Parser_Parse.ml
echo "open FStar_String" >> FStar_Parser_Parse.ml
# TODO: create a proper OCamlbuild rule for this production so that
# OCamlbuild knows how to generate parse.mly first (possibly using
# menhir) and removes the production as needed.
ocamlyacc parse.mly 2> yac-log
cat yac-log
5 shift/reduce conflicts.
cat parse.ml >> FStar_Parser_Parse.ml
rm parse.ml parse.mli
make[2]: Leaving directory '/tmp/fstar/src/ocaml-output'
make[2]: Entering directory '/tmp/fstar/src/ocaml-output'
make[2]: *** [Makefile:102: fstar.exe] Error 10
cd ../../ && ocamlbuild -cflag -g -I src/ocaml-output -I src/basic/ml -I src/parser/ml -I src/fstar/ml -I src/extraction/ml -I src/prettyprint/ml -I src/tactics/ml -I src/tests/ml -I ulib/ml -j 24 -build-dir src/ocaml-output/_build -use-ocamlfind main.native src/ocaml-output/FStar_Syntax_Syntax.inferred.mli
make[2]: Target 'all' not remade because of errors.
ocamlfind ocamlc -c -g -annot -bin-annot -thread -package stdint -package compiler-libs -package compiler-libs.common -package menhirLib -package dynlink -package pprint -package ulex -package yojson -package ocaml-migrate-parsetree -package process -package batteries -package zarith -package ppx_deriving.std -package ppx_deriving_yojson -I src/fstar/ml -I ulib/ml -I src/ocaml-output -I src/tests/ml -I src/tactics/ml -I src/prettyprint/ml -I src/parser/ml -I src/extraction/ml -I src/basic/ml -o src/fstar/ml/main.cmo src/fstar/ml/main.ml
make[1]: *** [Makefile:111: boot-ocaml] Error 2
ocamlfind ocamlopt -c -g -annot -bin-annot -thread -package stdint -package compiler-libs -package compiler-libs.common -package menhirLib -package dynlink -package pprint -package ulex -package yojson -package ocaml-migrate-parsetree -package process -package batteries -package zarith -package ppx_deriving.std -package ppx_deriving_yojson -I src/fstar/ml -I ulib/ml -I src/ocaml-output -I src/tests/ml -I src/tactics/ml -I src/prettyprint/ml -I src/parser/ml -I src/extraction/ml -I src/basic/ml -o src/fstar/ml/main.cmx src/fstar/ml/main.ml
make: *** [Makefile:154: utest-prelude] Error 2
ocamlfind ocamlopt -linkpkg -linkall -thread -package stdint -package compiler-libs -package compiler-libs.common -package menhirLib -package dynlink -package pprint -package ulex -package yojson -package ocaml-migrate-parsetree -package process -package batteries -package zarith -package ppx_deriving.std -package ppx_deriving_yojson -I src/fstar/ml src/fstar/ml/main.cmx -o src/fstar/ml/main.native
Command exited with non-zero status 2
+  ocamlfind ocamlopt -linkpkg -linkall -thread -package stdint -package compiler-libs -package compiler-libs.common -package menhirLib -package dynlink -package pprint -package ulex -package yojson -package ocaml-migrate-parsetree -package process -package batteries -package zarith -package ppx_deriving.std -package ppx_deriving_yojson -I src/fstar/ml src/fstar/ml/main.cmx -o src/fstar/ml/main.native
File "_none_", line 1:
0.60user 2.48system 0:40.39elapsed 7%CPU (0avgtext+0avgdata 54694400maxresident)k
Error: No implementations provided for the following modules:
FStar_Main referenced from src/fstar/ml/main.cmx
0inputs+0outputs (224890major+0minor)pagefaults 0swaps
Command exited with code 2.
make[2]: Leaving directory '/tmp/fstar/src/ocaml-output'
warm-up failed
