/bin/bash: krml: command not found
make: *** [Makefile:78: extracted/Makefile.include] Error 127
make: *** Waiting for unfinished jobs....
/bin/bash: krml: command not found
make: *** [Makefile:84: uint128/Makefile.include] Error 127
dos2unix: converting file parser/parse.fsi to Unix format...
Warning: you are using the standard library and/or the %inline keyword. We
recommend switching on --infer in order to avoid obscure type error messages.
warning: CRLF will be replaced by LF in src/parser/parse.fsy.
The file will have its original line endings in your working directory.
FStar.List.Tot.Properties.fst(858,2-858,37): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.List.Tot.Properties.fst(856,12-856,18))
FStar.List.Tot.Properties.fst(858,2-858,37): (Warning 252) could not prove post-condition (see also FStar.List.Tot.Properties.fst(856,12-856,18))
FStar.List.Tot.Properties.fst(887,2-888,24): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.List.Tot.Properties.fst(886,12-886,18))
FStar.OrdSet.fst(48,16-48,18): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Prims.eqtype; got type Type (see also prims.fst(27,21-27,28))
FStar.Monotonic.HyperStack.fst(373,4-373,33): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.Monotonic.HyperStack.fst(38,12-41,66))
FStar.Monotonic.HyperStack.fst(373,4-373,33): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.Monotonic.HyperStack.fst(38,12-41,66))
FStar.Seq.Properties.fst(474,2-477,29): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Seq.Properties.fst(472,20-472,28))
FStar.Fin.fst(36,2-51,18): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Fin.fst(33,41-33,68))
FStar.Fin.fst(36,2-51,18): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.Fin.fst(33,41-33,68))
LowStar.BufferView.fst(79,31-79,33): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type FStar.Seq.Properties.lseq (FStar.Pervasives.dfst vb)
(LowStar.Buffer.length (LowStar.BufferView.as_buffer vb)); got type FStar.Seq.Base.seq (FStar.Pervasives.dfst vb) (see also FStar.Seq.Properties.fst(24,19-24,36))
LowStar.BufferView.fst(84,4-98,24): (Warning 252) (Hint-replay failed): could not prove post-condition (see also LowStar.BufferView.fst(82,11-82,41))
LowStar.BufferView.fst(156,38-156,40): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type FStar.Seq.Properties.lseq (FStar.Pervasives.dfst vb)
(LowStar.Buffer.length (LowStar.BufferView.as_buffer vb)); got type FStar.Seq.Base.seq (FStar.Pervasives.dfst vb) (see also FStar.Seq.Properties.fst(24,19-24,36))
LowStar.Buffer.fst(548,2-553,3): (Warning 252) (Hint-replay failed): could not prove post-condition (see also LowStar.Buffer.fst(543,4-543,46))
LowStar.Buffer.fst(578,2-584,3): (Warning 252) (Hint-replay failed): could not prove post-condition (see also LowStar.Buffer.fsti(918,4-918,35))
FStar.Tactics.Effect.fst(21,14-21,15): (Warning 266) Not an embedded tactic result: match
(match
FStar.Reflection.Data.Tv_App (`Prims.squash) ((`1 + 1 == 2), FStar.Reflection.Data.Q_Explicit)
with
| FStar.Reflection.Data.Tv_App squash (g, _) ->
reify ((let _ =
FStar.Tactics.Builtins.inspect squash
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_FVar squash ->
((if
FStar.Reflection.Derived.fv_to_string squash =
FStar.Reflection.Derived.flatten_name FStar.Reflection.Const.squash_qn
then
(let _ =
FStar.Tactics.Builtins.inspect g
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_App eq_type_x (y, _) ->
(let _ =
FStar.Tactics.Builtins.inspect eq_type_x
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_App eq_type (x, _) ->
(let _ =
FStar.Tactics.Builtins.inspect eq_type
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_App eq (_, _) ->
(let _ =
FStar.Tactics.Builtins.inspect eq
<:
FStar.Tactics.Effect.TAC
FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_FVar eq ->
((if
FStar.Reflection.Derived.fv_to_string eq
=
FStar.Reflection.Derived.flatten_name FStar.Reflection.Const.eq2_qn

then
x, y
<:
Prims.PURE
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term)
else
FStar.Tactics.Builtins.fail "not an equality"

<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term *
FStar.Reflection.Types.term
| _ ->
FStar.Tactics.Builtins.fail "not an app2 of fvar: "

<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term *
FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term)
| _ ->
FStar.Tactics.Builtins.fail "not an app3"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term)
| _ ->
FStar.Tactics.Builtins.fail "not an app2"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term)
| _ ->
FStar.Tactics.Builtins.fail "not an app under squash"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term)
else
FStar.Tactics.Builtins.fail "not a squash"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term
| _ ->
FStar.Tactics.Builtins.fail "not an app of fvar at top level"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC (FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC (FStar.Reflection.Types.term * FStar.Reflection.Types.term))
| _ ->
reify (FStar.Tactics.Builtins.fail "not an app at top level"
<:
FStar.Tactics.Effect.TAC (FStar.Reflection.Types.term * FStar.Reflection.Types.term))) "(((proofstate)))"

with
| FStar.Tactics.Result.Success a ps' ->
let ps' =
FStar.Tactics.Types.set_proofstate_range ps'
(FStar.Range.prims_to_fstar_range FStar.Tactics.PatternMatching.fst(80,15-81,66))
in
(let () = FStar.Tactics.Types.tracepoint ps' in
(fun _ ->
reify (((let l, r = _ in
FStar.Tactics.Builtins.print (FStar.Reflection.Basic.term_to_string l ^
" / " ^ FStar.Reflection.Basic.term_to_string r)
<:
FStar.Tactics.Effect.TAC Prims.unit)
<:
FStar.Tactics.Effect.TAC Prims.unit)
<:
Prims.unit)) a
(FStar.Tactics.Types.decr_depth ps'))
<:
FStar.Tactics.Result.__result Prims.unit
| FStar.Tactics.Result.Failed msg ps' -> FStar.Tactics.Result.Failed msg ps' (see also FStar.Tactics.Effect.fst(20,12-20,13))
FStar.Tactics.PatternMatching.fst(79,2-79,18): (Error 228) user tactic failed: Tactic got stuck! Please file a bug report with a minimal reproduction of this issue.
match
(match
FStar.Reflection.Data.Tv_App (`Prims.squash) ((`1 + 1 == 2), FStar.Reflection.Data.Q_Explicit)
with
| FStar.Reflection.Data.Tv_App squash (g, _) ->
reify ((let _ =
FStar.Tactics.Builtins.inspect squash
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_FVar squash ->
((if
FStar.Reflection.Derived.fv_to_string squash =
FStar.Reflection.Derived.flatten_name FStar.Reflection.Const.squash_qn
then
(let _ =
FStar.Tactics.Builtins.inspect g
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_App eq_type_x (y, _) ->
(let _ =
FStar.Tactics.Builtins.inspect eq_type_x
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_App eq_type (x, _) ->
(let _ =
FStar.Tactics.Builtins.inspect eq_type
<:
FStar.Tactics.Effect.TAC FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_App eq (_, _) ->
(let _ =
FStar.Tactics.Builtins.inspect eq
<:
FStar.Tactics.Effect.TAC
FStar.Reflection.Data.term_view
in
((match _ with
| FStar.Reflection.Data.Tv_FVar eq ->
((if
FStar.Reflection.Derived.fv_to_string eq
=
FStar.Reflection.Derived.flatten_name FStar.Reflection.Const.eq2_qn

then
x, y
<:
Prims.PURE
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term)
else
FStar.Tactics.Builtins.fail "not an equality"

<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term *
FStar.Reflection.Types.term
| _ ->
FStar.Tactics.Builtins.fail "not an app2 of fvar: "

<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term *
FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term)
| _ ->
FStar.Tactics.Builtins.fail "not an app3"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term *
FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term)
| _ ->
FStar.Tactics.Builtins.fail "not an app2"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term)
| _ ->
FStar.Tactics.Builtins.fail "not an app under squash"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term)
else
FStar.Tactics.Builtins.fail "not a squash"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term
| _ ->
FStar.Tactics.Builtins.fail "not an app of fvar at top level"
<:
FStar.Tactics.Effect.TAC
(FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Tactics.Effect.TAC (FStar.Reflection.Types.term * FStar.Reflection.Types.term))
<:
FStar.Reflection.Types.term * FStar.Reflection.Types.term)
<:
FStar.Tactics.Effect.TAC (FStar.Reflection.Types.term * FStar.Reflection.Types.term))
| _ ->
reify (FStar.Tactics.Builtins.fail "not an app at top level"
<:
FStar.Tactics.Effect.TAC (FStar.Reflection.Types.term * FStar.Reflection.Types.term))) "(((proofstate)))"

with
| FStar.Tactics.Result.Success a ps' ->
let ps' =
FStar.Tactics.Types.set_proofstate_range ps'
(FStar.Range.prims_to_fstar_range FStar.Tactics.PatternMatching.fst(80,15-81,66))
in
(let () = FStar.Tactics.Types.tracepoint ps' in
(fun _ ->
reify (((let l, r = _ in
FStar.Tactics.Builtins.print (FStar.Reflection.Basic.term_to_string l ^
" / " ^ FStar.Reflection.Basic.term_to_string r)
<:
FStar.Tactics.Effect.TAC Prims.unit)
<:
FStar.Tactics.Effect.TAC Prims.unit)
<:
Prims.unit)) a
(FStar.Tactics.Types.decr_depth ps'))
<:
FStar.Tactics.Result.__result Prims.unit
| FStar.Tactics.Result.Failed msg ps' -> FStar.Tactics.Result.Failed msg ps'
1 error was reported (see above)
make[3]: *** [gmake/Makefile.tmpl:29: FStar.Tactics.PatternMatching.fst.checked] Error 1
FStar.Integers.fst(440,5-454,43): (Warning 252) (Hint-replay failed): Patterns are incomplete
FStar.Tactics.Typeclasses.fst(83,4-128,16): (Warning 252) (Hint-replay failed): Patterns are incomplete
FStar.Tactics.Typeclasses.fst(83,4-128,16): (Warning 252) (Hint-replay failed): Patterns are incomplete
FStar.Reflection.Arith.fst(116,30-116,32): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type t: FStar.Reflection.Types.term{t << t}; got type FStar.Reflection.Types.term (see also FStar.Reflection.Arith.fst(110,4-153,14))
FStar.Reflection.Arith.fst(116,30-116,32): (Warning 252) Subtyping check failed; expected type t: FStar.Reflection.Types.term{t << t}; got type FStar.Reflection.Types.term (see also FStar.Reflection.Arith.fst(110,4-153,14))
FStar.Reflection.Arith.fst(116,30-116,32): (Warning 252) Subtyping check failed; expected type t: FStar.Reflection.Types.term{t << t}; got type FStar.Reflection.Types.term (see also FStar.Reflection.Arith.fst(110,4-153,14))
FStar.Buffer.fst(65,4-65,10): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Prims.nat; got type FStar.UInt.uint_t FStar.UInt32.n (see also prims.fst(408,17-408,23))
LowStar.ToFStarBuffer.fst(285,2-286,19): (Warning 252) (Hint-replay failed): could not prove post-condition (see also LowStar.ToFStarBuffer.fst(281,13-281,49))
FStar.ModifiesGen.fst(494,35-494,37): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(332,11-332,36))
FStar.ModifiesGen.fst(540,91-540,93): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(390,11-390,67))
FStar.ModifiesGen.fst(544,78-544,80): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(414,24-414,42))
FStar.ModifiesGen.fst(899,20-899,25): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fsti(574,15-574,55))
FStar.ModifiesGen.fst(915,55-915,57): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(624,4-624,20))
FStar.ModifiesGen.fst(933,2-933,8): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(933,57-933,141))
FStar.ModifiesGen.fst(939,79-939,81): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(701,11-701,45))
FStar.ModifiesGen.fst(941,72-941,74): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(712,11-712,32))
FStar.ModifiesGen.fst(983,2-984,117): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fst(982,11-982,28))
FStar.ModifiesGen.fst(1212,20-1212,22): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(478,34-478,59))
FStar.ModifiesGen.fst(1297,9-1297,41): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type y: FStar.GSet.set Prims.nat {FStar.GSet.subset (non_live_addrs' r') y}; got type FStar.GSet.set Prims.nat (see also FStar.ModifiesGen.fst(1295,83-1295,117))
FStar.ModifiesGen.fst(1476,2-1476,64): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(954,12-954,71))
FStar.ModifiesGen.fst(1744,2-1754,39): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fst(1743,11-1743,84))
FStar.ModifiesGen.fst(1816,2-1816,8): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(1816,9-1816,40))
FStar.ModifiesGen.fst(1876,2-1884,39): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fst(1875,11-1875,42))
FStar.ModifiesGen.fst(1956,4-1956,10): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.ModifiesGen.fst(1965,8-1965,36))
FStar.ModifiesGen.fst(1984,4-1984,21): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type aux:
FStar.Ghost.erased (FStar.GSet.set (FStar.ModifiesGen.aloc (c b)))
{ FStar.GSet.subset (FStar.ModifiesGen.aloc_domain (c b) regions live_addrs)
(FStar.Ghost.reveal aux) /\
FStar.GSet.subset (FStar.Ghost.reveal aux)
(FStar.ModifiesGen.aloc_domain (c b) regions (fun _ -> FStar.GSet.complement FStar.GSet.empty)
) }; got type FStar.Ghost.erased (FStar.GSet.set (FStar.ModifiesGen.aloc (c b))) (see also FStar.ModifiesGen.fst(30,8-30,71))
FStar.ModifiesGen.fst(1993,9-1993,119): (Warning 252) (Hint-replay failed): assertion failed
FStar.ModifiesGen.fst(1996,9-1996,121): (Warning 252) (Hint-replay failed): assertion failed
FStar.ModifiesGen.fst(2067,2-2073,167): (Warning 252) (Hint-replay failed): could not prove post-condition (see also FStar.ModifiesGen.fsti(1109,2-1109,78))
make[3]: Target 'verify-core' not remade because of errors.
make[2]: *** [Makefile:12: all] Error 2
make[1]: *** [Makefile:193: fstarlib] Error 2
make: *** [Makefile:176: utest-prelude] Error 2
Command exited with non-zero status 2
11.84user 43.50system 11:19.76elapsed 8%CPU (0avgtext+0avgdata 1384369408maxresident)k
0inputs+0outputs (5666321major+0minor)pagefaults 0swaps
