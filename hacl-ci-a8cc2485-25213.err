Cloning into 'fstar'...
Checking out files:  26% (849/3256)   Checking out files:  27% (880/3256)   Checking out files:  28% (912/3256)   Checking out files:  29% (945/3256)   Checking out files:  30% (977/3256)   Checking out files:  31% (1010/3256)   Checking out files:  32% (1042/3256)   Checking out files:  33% (1075/3256)   Checking out files:  34% (1108/3256)   Checking out files:  35% (1140/3256)   Checking out files:  36% (1173/3256)   Checking out files:  37% (1205/3256)   Checking out files:  38% (1238/3256)   Checking out files:  39% (1270/3256)   Checking out files:  40% (1303/3256)   Checking out files:  41% (1335/3256)   Checking out files:  42% (1368/3256)   Checking out files:  43% (1401/3256)   Checking out files:  44% (1433/3256)   Checking out files:  45% (1466/3256)   Checking out files:  46% (1498/3256)   Checking out files:  47% (1531/3256)   Checking out files:  48% (1563/3256)   Checking out files:  48% (1594/3256)   Checking out files:  49% (1596/3256)   Checking out files:  50% (1628/3256)   Checking out files:  51% (1661/3256)   Checking out files:  52% (1694/3256)   Checking out files:  53% (1726/3256)   Checking out files:  54% (1759/3256)   Checking out files:  55% (1791/3256)   Checking out files:  56% (1824/3256)   Checking out files:  57% (1856/3256)   Checking out files:  58% (1889/3256)   Checking out files:  59% (1922/3256)   Checking out files:  60% (1954/3256)   Checking out files:  61% (1987/3256)   Checking out files:  62% (2019/3256)   Checking out files:  63% (2052/3256)   Checking out files:  64% (2084/3256)   Checking out files:  65% (2117/3256)   Checking out files:  66% (2149/3256)   Checking out files:  67% (2182/3256)   Checking out files:  68% (2215/3256)   Checking out files:  69% (2247/3256)   Checking out files:  70% (2280/3256)   Checking out files:  71% (2312/3256)   Checking out files:  72% (2345/3256)   Checking out files:  73% (2377/3256)   Checking out files:  73% (2406/3256)   Checking out files:  74% (2410/3256)   Checking out files:  75% (2442/3256)   Checking out files:  76% (2475/3256)   Checking out files:  77% (2508/3256)   Checking out files:  78% (2540/3256)   Checking out files:  79% (2573/3256)   Checking out files:  80% (2605/3256)   Checking out files:  81% (2638/3256)   Checking out files:  82% (2670/3256)   Checking out files:  83% (2703/3256)   Checking out files:  84% (2736/3256)   Checking out files:  85% (2768/3256)   Checking out files:  86% (2801/3256)   Checking out files:  87% (2833/3256)   Checking out files:  88% (2866/3256)   Checking out files:  89% (2898/3256)   Checking out files:  90% (2931/3256)   Checking out files:  91% (2963/3256)   Checking out files:  92% (2996/3256)   Checking out files:  93% (3029/3256)   Checking out files:  94% (3061/3256)   Checking out files:  95% (3094/3256)   Checking out files:  95% (3119/3256)   Checking out files:  96% (3126/3256)   Checking out files:  97% (3159/3256)   Checking out files:  98% (3191/3256)   Checking out files:  99% (3224/3256)   Checking out files: 100% (3256/3256)   Checking out files: 100% (3256/3256), done.
Warning: you are using the standard library and/or the %inline keyword. We
recommend switching on --infer in order to avoid obscure type error messages.
FStar.Monotonic.Map.fst(65,20-65,31): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Map.fst(84,4-84,14): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Map.fst(85,4-85,14): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Map.fst(105,8-105,18): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Map.fst(106,8-106,18): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.DependentMap.fsti(135,24-135,35): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.DependentMap.fsti(147,24-147,35): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.DependentMap.fst(53,4-53,14): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.DependentMap.fst(61,6-61,16): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Seq.fst(60,19-60,30): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(80,4-80,14): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Seq.fst(102,19-102,30): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(109,19-109,30): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(142,4-142,14): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Seq.fst(160,2-160,12): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Seq.fst(168,2-168,12): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Seq.fst(259,10-259,21): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(273,11-273,22): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(320,11-320,22): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(343,11-343,22): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(369,11-369,22): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(386,4-386,14): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Seq.fst(403,4-403,14): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
LowStar.Monotonic.Buffer.fsti(1585,51-1585,68): (Warning 288) FStar.Monotonic.HyperStack.is_eternal_region is deprecated, use FStar.HyperStack.ST.is_eternal_region instead
LowStar.Monotonic.Buffer.fsti(1585,51-1585,68): (Warning 288) FStar.Monotonic.HyperStack.is_eternal_region is deprecated, use FStar.HyperStack.ST.is_eternal_region instead
FStar.Monotonic.Map.fst(65,20-65,31): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Map.fst(84,4-84,14): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Map.fst(85,4-85,14): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Map.fst(105,8-105,18): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Map.fst(106,8-106,18): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.DependentMap.fsti(135,24-135,35): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.DependentMap.fsti(147,24-147,35): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.DependentMap.fsti(135,24-135,35): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.DependentMap.fsti(147,24-147,35): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.DependentMap.fst(53,4-53,14): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.DependentMap.fst(61,6-61,16): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Seq.fst(60,19-60,30): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(80,4-80,14): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Seq.fst(102,19-102,30): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(109,19-109,30): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(142,4-142,14): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Seq.fst(160,2-160,12): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Seq.fst(168,2-168,12): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Seq.fst(259,10-259,21): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(273,11-273,22): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(320,11-320,22): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(343,11-343,22): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(369,11-369,22): (Warning 288) FStar.HyperStack.ST.stable_on_t is deprecated, use FStar.HyperStack.ST.stable_on instead
FStar.Monotonic.Seq.fst(386,4-386,14): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
FStar.Monotonic.Seq.fst(403,4-403,14): (Warning 288) FStar.HyperStack.ST.mr_witness is deprecated, use FStar.HyperStack.ST.witness_p instead
LowStar.Monotonic.Buffer.fsti(1585,51-1585,68): (Warning 288) FStar.Monotonic.HyperStack.is_eternal_region is deprecated, use FStar.HyperStack.ST.is_eternal_region instead
LowStar.Monotonic.Buffer.fsti(1585,51-1585,68): (Warning 288) FStar.Monotonic.HyperStack.is_eternal_region is deprecated, use FStar.HyperStack.ST.is_eternal_region instead
Cloning into 'kremlin'...
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Date.dateTime to KreMLin (assumed type)
Not extracting type definition FStar.Date.timeSpan to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Float.float to KreMLin (assumed type)
Not extracting type definition FStar.Dyn.dyn to KreMLin (assumed type)
Not extracting FStar.Dyn.mkdyn to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Dyn.undyn to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting exception EOF to KreMLin (exceptions unsupported)
Not extracting type definition FStar.IO.fd_read to KreMLin (assumed type)
Not extracting type definition FStar.IO.fd_write to KreMLin (assumed type)
Not extracting FStar.IO.print_any to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Bytes.bytes to KreMLin (assumed type)
Not extracting FStar.Bytes.empty_bytes to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition C.channel to KreMLin (assumed type)
Not extracting C.stdout to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting C.stderr to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition C.intptr_t to KreMLin (assumed type)
Not extracting C.nullptr to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition C.char to KreMLin (assumed type)
Not extracting type definition C.int to KreMLin (assumed type)
Not extracting type definition C.clock_t to KreMLin (assumed type)
Not extracting TestLib.uint8_p_null to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting TestLib.uint32_p_null to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting TestLib.uint64_p_null to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition TestLib.cycles to KreMLin (assumed type)
Warning 16: : Cannot enforce arity at call-site for FStar.List.Tot.Base.bool_of_compare (Invalid_argument split -- is this a partial application?)
Warning 16: : Cannot enforce arity at call-site for FStar.Set.singleton (Invalid_argument split -- is this a partial application?)
Warning 16: : Cannot enforce arity at call-site for FStar.Set.union (Invalid_argument split -- is this a partial application?)
Warning 16: : Cannot enforce arity at call-site for FStar.Set.singleton (Invalid_argument split -- is this a partial application?)
Warning 16: : Cannot enforce arity at call-site for FStar.Set.union (Invalid_argument split -- is this a partial application?)
Warning 16: : Cannot enforce arity at call-site for FStar.Set.singleton (Invalid_argument split -- is this a partial application?)
Warning 16: : Cannot enforce arity at call-site for FStar.Set.union (Invalid_argument split -- is this a partial application?)
Warning 16: : Cannot enforce arity at call-site for FStar.Set.complement (Invalid_argument split -- is this a partial application?)
Warning 16: : Cannot enforce arity at call-site for FStar.Set.union (Invalid_argument split -- is this a partial application?)
Warning 16: : Cannot enforce arity at call-site for FStar.Set.intersect (Invalid_argument split -- is this a partial application?)
Cannot re-check FStar.IO.uu___is_EOF as valid Low* and will not extract it.  If FStar.IO.uu___is_EOF is not meant to be extracted, consider marking it as Ghost, noextract, or using a bundle. If it is meant to be extracted, use -dast for further debugging.

Warning 4: in top-level declaration FStar.IO.uu___is_EOF, in file FStar_IO: Malformed input:
Reference to undefined type: Prims.exn
Cannot re-check FStar.Int.div_eucl as valid Low* and will not extract it.  If FStar.Int.div_eucl is not meant to be extracted, consider marking it as Ghost, noextract, or using a bundle. If it is meant to be extracted, use -dast for further debugging.

Warning 4: in the arguments to Prims.op_Minus, in top-level declaration FStar.Int.div_eucl, in file FStar_Int: Malformed input:
subtype mismatch, krml_checked_int_t -> krml_checked_int_t (a.k.a. krml_checked_int_t -> krml_checked_int_t) vs krml_checked_int_t (a.k.a. krml_checked_int_t)
Cannot re-check FStar.All.uu___is_Failure as valid Low* and will not extract it.  If FStar.All.uu___is_Failure is not meant to be extracted, consider marking it as Ghost, noextract, or using a bundle. If it is meant to be extracted, use -dast for further debugging.

Warning 4: in top-level declaration FStar.All.uu___is_Failure, in file FStar_All: Malformed input:
Reference to undefined type: Prims.exn
Cannot re-check FStar.All.__proj__Failure__item__uu___ as valid Low* and will not extract it.  If FStar.All.__proj__Failure__item__uu___ is not meant to be extracted, consider marking it as Ghost, noextract, or using a bundle. If it is meant to be extracted, use -dast for further debugging.

Warning 4: in top-level declaration FStar.All.__proj__Failure__item__uu___, in file FStar_All: Malformed input:
Reference to undefined type: Prims.exn
Cannot re-check FStar.Monotonic.Heap.ref_of' as valid Low* and will not extract it.  If FStar.Monotonic.Heap.ref_of' is not meant to be extracted, consider marking it as Ghost, noextract, or using a bundle. If it is meant to be extracted, use -dast for further debugging.

Warning 4: after the definition of uu____7139, in top-level declaration FStar.Monotonic.Heap.ref_of', in file FStar_Monotonic_Heap: Malformed input:
Not a record any*
Cannot re-check FStar.Math.Lib.div as valid Low* and will not extract it.  If FStar.Math.Lib.div is not meant to be extracted, consider marking it as Ghost, noextract, or using a bundle. If it is meant to be extracted, use -dast for further debugging.

Warning 4: in the arguments to Prims.op_Minus, in top-level declaration FStar.Math.Lib.div, in file FStar_Math_Lib: Malformed input:
subtype mismatch, krml_checked_int_t -> krml_checked_int_t (a.k.a. krml_checked_int_t -> krml_checked_int_t) vs krml_checked_int_t (a.k.a. krml_checked_int_t)
Warning 9: : Some globals did not compile to C values and must be initialized before starting main(). You did not provide a main function, so users of your library MUST MAKE SURE they call kremlinit_globals(); (see kremlinit.c). Once you have fixed this, use -warn-error +9 to make this warning non-fatal.
Warning 15: : FStar.Math.Lib.signed_modulo is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Math.Lib.arithmetic_shift_right is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Math.Lib.shift_left is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Math.Lib.div_non_eucl is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Math.Lib.min is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Math.Lib.max is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Math.Lib.abs is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int16.of_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Int16.to_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Seq.Base.hd__uint64_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.tl__uint64_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.index__uint64_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.List.Tot.Base.tl__uint64_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.List.Tot.Base.tail__uint64_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.List.Tot.Base.hd__uint64_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.length__uint64_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.cons__uint64_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.append__uint64_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.empty__uint64_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.seq__uint64_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.list__uint64_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.hd__uint32_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.tl__uint32_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.index__uint32_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.List.Tot.Base.tl__uint32_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.List.Tot.Base.tail__uint32_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.List.Tot.Base.hd__uint32_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.length__uint32_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.cons__uint32_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.append__uint32_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.empty__uint32_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.seq__uint32_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.list__uint32_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.append__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.empty__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Properties.last__uint8_t is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.hd__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.cons__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.tl__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.index__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.List.Tot.Base.tl__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.List.Tot.Base.tail__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.List.Tot.Base.hd__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.length__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.seq__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.list__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt8.of_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.UInt8.to_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.UInt63.of_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.UInt63.to_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Pervasives.__proj__CCConv__item___0 is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Pervasives.__proj__CConst__item___0 is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Pervasives.__proj__CEpilogue__item___0 is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Pervasives.__proj__CPrologue__item___0 is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Pervasives.__proj__Comment__item___0 is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Pervasives.__proj__PpxDerivingShowConstant__item___0 is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Pervasives.__internal_ocaml_attributes is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Int63.of_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Int63.to_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Int64.of_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Int64.to_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Int32.of_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Int32.to_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Int8.of_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Int8.to_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Int.shift_left is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.to_int_t is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.lte is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.lt is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.gte is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.gt is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.mod_ is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.mul_mod is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.mul is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.sub_mod is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.sub is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.add_mod is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.add is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.fits is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.min_int is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.max_int is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.op_At_Percent is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Int.op_Slash is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt16.of_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.UInt16.to_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.IO.debug_print_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.IO.write_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.IO.read_line is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.IO.open_write_file is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.IO.open_read_file is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.IO.input_line is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.IO.print_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.string_of_char is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.collect is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.get is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.substring is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.sub is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.index_of is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.index is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.uppercase is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.lowercase is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.compare is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.concat is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.String.concat is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.op_Hat is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.strcat is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.split is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.String.split is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.make is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.length is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.strlen is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.string_of_list is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.String.string_of_list is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.String.list_of_string is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.String.list_of_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : Prims.list__FStar_Char_char is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Bytes.bytes_of_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Bytes.print_bytes is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Bytes.hex_of_bytes is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Bytes.hex_of_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Bytes.bytes_of_hex is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Bytes.string_of_hex is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Pervasives.Native.option__Prims_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Bytes.utf8_encode is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.UInt32.of_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.UInt32.to_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.HyperStack.IO.print_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.UInt64.of_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.UInt64.to_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Seq.Base.empty__bool is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.to_uint_t is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.lte is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.lt is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.gte is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.gt is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.mod_ is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.udiv is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.div_underspec is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.div is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.mul_div is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.mul_mod is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.mul_underspec is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.mul is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.sub_mod is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.sub_underspec is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.sub is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.add_mod is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.add_underspec is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.add is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.decr_mod is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.incr_mod is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.decr_underspec is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.incr_underspec is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.decr is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.incr is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.pow2_n is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.fits is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt.max_int is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.BitVector.shift_right_vec is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.BitVector.shift_left_vec is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.append__bool is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.index__bool is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.hd__bool is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.List.Tot.Base.hd__bool is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.tl__bool is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.List.Tot.Base.tl__bool is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.List.Tot.Base.tail__bool is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.cons__bool is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.seq__bool is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.list__bool is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Pervasives.Native.norm is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.list__FStar_Pervasives_Native_norm_step is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Pervasives.Native.delta_attr is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Pervasives.Native.delta_fully is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Pervasives.Native.delta_only is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Pervasives.Native.norm_step is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.list__Prims_string is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.list__Prims_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : Prims.string_of_int is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.string_of_int is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : Prims.strcat is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : Prims.abs is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.pow2 is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_LessThan is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_GreaterThanOrEqual is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_GreaterThan is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_LessThanOrEqual is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Modulus is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Minus is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Addition is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Subtraction is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Division is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Multiply is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 11: in top-level declaration kremlinit_globals: this expression is not Low*; the enclosing function cannot be translated into C*: fun (r(0, ): Prims_int) :FStar_Pervasives_Native_option__FStar_Pervasives_dtuple4_____FStar_Pervasives_Native_option_____bool_any { { tag = FStar_Pervasives_Native_None; } }
Cloning into 'mlcrypto'...
Submodule 'openssl' (https://github.com/openssl/openssl) registered for path 'openssl'
Cloning into '/cygdrive/c/build/agent2/_work/34/s/mlcrypto/openssl'...
crypto/asn1/x_int64.c: In function 'uint64_print':
crypto/asn1/x_int64.c:105:34: warning: unknown conversion type character 'j' in format [-Wformat=]
return BIO_printf(out, "%jd\n", **(int64_t **)pval);
^
crypto/asn1/x_int64.c:105:32: warning: too many arguments for format [-Wformat-extra-args]
return BIO_printf(out, "%jd\n", **(int64_t **)pval);
^~~~~~~
crypto/asn1/x_int64.c:106:30: warning: unknown conversion type character 'j' in format [-Wformat=]
return BIO_printf(out, "%ju\n", **(uint64_t **)pval);
^
crypto/asn1/x_int64.c:106:28: warning: too many arguments for format [-Wformat-extra-args]
return BIO_printf(out, "%ju\n", **(uint64_t **)pval);
^~~~~~~
crypto/bio/b_sock.c: In function 'BIO_get_accept_socket':
crypto/bio/b_sock.c:202:13: warning: overflow in implicit constant conversion [-Woverflow]
int s = INVALID_SOCKET;
^~~~~~~~~~~~~~
crypto/bio/b_sock.c:207:16: warning: overflow in implicit constant conversion [-Woverflow]
return INVALID_SOCKET;
^~~~~~~~~~~~~~
crypto/bio/b_sock.c:210:16: warning: overflow in implicit constant conversion [-Woverflow]
return INVALID_SOCKET;
^~~~~~~~~~~~~~
crypto/bio/b_sock.c:217:13: warning: overflow in implicit constant conversion [-Woverflow]
s = INVALID_SOCKET;
^~~~~~~~~~~~~~
crypto/bio/b_sock.c:224:13: warning: overflow in implicit constant conversion [-Woverflow]
s = INVALID_SOCKET;
^~~~~~~~~~~~~~
crypto/bio/b_sock2.c: In function 'BIO_socket':
crypto/bio/b_sock2.c:45:16: warning: overflow in implicit constant conversion [-Woverflow]
return INVALID_SOCKET;
^~~~~~~~~~~~~~
crypto/bio/b_sock2.c:51:16: warning: overflow in implicit constant conversion [-Woverflow]
return INVALID_SOCKET;
^~~~~~~~~~~~~~
crypto/bio/b_sock2.c: In function 'BIO_accept_ex':
crypto/bio/b_sock2.c:263:16: warning: overflow in implicit constant conversion [-Woverflow]
return INVALID_SOCKET;
^~~~~~~~~~~~~~
crypto/bio/b_sock2.c:268:16: warning: overflow in implicit constant conversion [-Woverflow]
return INVALID_SOCKET;
^~~~~~~~~~~~~~
In file included from crypto/bn/bn_print.c:15:0:
crypto/bn/bn_print.c: In function 'BN_bn2dec':
crypto/bn/bn_lcl.h:94:27: warning: unknown conversion type character 'l' in format [-Wformat=]
#  define BN_DEC_FMT1     "%llu"
^
crypto/bn/bn_print.c:104:57: note: in expansion of macro 'BN_DEC_FMT1'
n = BIO_snprintf(p, tbytes - (size_t)(p - buf), BN_DEC_FMT1, *lp);
^~~~~~~~~~~
crypto/bn/bn_lcl.h:94:27: warning: too many arguments for format [-Wformat-extra-args]
#  define BN_DEC_FMT1     "%llu"
^
crypto/bn/bn_print.c:104:57: note: in expansion of macro 'BN_DEC_FMT1'
n = BIO_snprintf(p, tbytes - (size_t)(p - buf), BN_DEC_FMT1, *lp);
^~~~~~~~~~~
crypto/bn/bn_lcl.h:95:27: warning: unknown conversion type character 'l' in format [-Wformat=]
#  define BN_DEC_FMT2     "%019llu"
^
crypto/bn/bn_print.c:110:61: note: in expansion of macro 'BN_DEC_FMT2'
n = BIO_snprintf(p, tbytes - (size_t)(p - buf), BN_DEC_FMT2, *lp);
^~~~~~~~~~~
crypto/bn/bn_lcl.h:95:27: warning: too many arguments for format [-Wformat-extra-args]
#  define BN_DEC_FMT2     "%019llu"
^
crypto/bn/bn_print.c:110:61: note: in expansion of macro 'BN_DEC_FMT2'
n = BIO_snprintf(p, tbytes - (size_t)(p - buf), BN_DEC_FMT2, *lp);
^~~~~~~~~~~
crypto/bn/bn_print.c: In function 'BN_options':
crypto/bn/bn_print.c:340:47: warning: unknown conversion type character 'z' in format [-Wformat=]
BIO_snprintf(data, sizeof(data), "bn(%zu,%zu)",
^
crypto/bn/bn_print.c:340:51: warning: unknown conversion type character 'z' in format [-Wformat=]
BIO_snprintf(data, sizeof(data), "bn(%zu,%zu)",
^
crypto/bn/bn_print.c:340:42: warning: too many arguments for format [-Wformat-extra-args]
BIO_snprintf(data, sizeof(data), "bn(%zu,%zu)",
^~~~~~~~~~~~~
crypto/threads_win.c: In function 'CRYPTO_atomic_add':
crypto/threads_win.c:132:35: warning: passing argument 1 of '_InterlockedExchangeAdd' from incompatible pointer type [-Wincompatible-pointer-types]
*ret = InterlockedExchangeAdd(val, amount) + amount;
^~~
In file included from /usr/x86_64-w64-mingw32/sys-root/mingw/include/winnt.h:27:0,
from /usr/x86_64-w64-mingw32/sys-root/mingw/include/minwindef.h:163,
from /usr/x86_64-w64-mingw32/sys-root/mingw/include/windef.h:8,
from /usr/x86_64-w64-mingw32/sys-root/mingw/include/windows.h:69,
from crypto/threads_win.c:11:
/usr/x86_64-w64-mingw32/sys-root/mingw/include/psdk_inc/intrin-impl.h:1026:10: note: expected 'volatile long int *' but argument is of type 'int *'
__LONG32 _InterlockedExchangeAdd(__LONG32 volatile *Addend, __LONG32 Value) {
^~~~~~~~~~~~~~~~~~~~~~~
crypto/threads_win.c: In function 'CRYPTO_atomic_read':
crypto/threads_win.c:138:39: warning: passing argument 1 of '_InterlockedCompareExchange' from incompatible pointer type [-Wincompatible-pointer-types]
*ret = InterlockedCompareExchange(val, 0, 0);
^~~
In file included from /usr/x86_64-w64-mingw32/sys-root/mingw/include/winnt.h:27:0,
from /usr/x86_64-w64-mingw32/sys-root/mingw/include/minwindef.h:163,
from /usr/x86_64-w64-mingw32/sys-root/mingw/include/windef.h:8,
from /usr/x86_64-w64-mingw32/sys-root/mingw/include/windows.h:69,
from crypto/threads_win.c:11:
/usr/x86_64-w64-mingw32/sys-root/mingw/include/psdk_inc/intrin-impl.h:1037:10: note: expected 'volatile long int *' but argument is of type 'int *'
__LONG32 _InterlockedCompareExchange(__LONG32 volatile *Destination, __LONG32 ExChange, __LONG32 Comperand) {
^~~~~~~~~~~~~~~~~~~~~~~~~~~
crypto/threads_win.c: In function 'CRYPTO_atomic_write':
crypto/threads_win.c:144:25: warning: passing argument 1 of '_InterlockedExchange' from incompatible pointer type [-Wincompatible-pointer-types]
InterlockedExchange(val, n);
^~~
In file included from /usr/x86_64-w64-mingw32/sys-root/mingw/include/winnt.h:27:0,
from /usr/x86_64-w64-mingw32/sys-root/mingw/include/minwindef.h:163,
from /usr/x86_64-w64-mingw32/sys-root/mingw/include/windef.h:8,
from /usr/x86_64-w64-mingw32/sys-root/mingw/include/windows.h:69,
from crypto/threads_win.c:11:
/usr/x86_64-w64-mingw32/sys-root/mingw/include/psdk_inc/intrin-impl.h:1088:10: note: expected 'volatile long int *' but argument is of type 'int *'
__LONG32 _InterlockedExchange(__LONG32 volatile *Target, __LONG32 Value) {
^~~~~~~~~~~~~~~~~~~~
test/testutil/tests.c: In function 'test_size_t_eq':
test/testutil/tests.c:196:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:202:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, eq, ==, fmt)                          \
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c:196:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:202:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, eq, ==, fmt)                          \
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c:196:27: warning: too many arguments for format [-Wformat-extra-args]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:202:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, eq, ==, fmt)                          \
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c: In function 'test_size_t_ne':
test/testutil/tests.c:196:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:203:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, ne, !=, fmt)                          \
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c:196:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:203:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, ne, !=, fmt)                          \
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c:196:27: warning: too many arguments for format [-Wformat-extra-args]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:203:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, ne, !=, fmt)                          \
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c: In function 'test_size_t_lt':
test/testutil/tests.c:196:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:204:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, lt, <, fmt)                           \
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c:196:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:204:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, lt, <, fmt)                           \
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c:196:27: warning: too many arguments for format [-Wformat-extra-args]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:204:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, lt, <, fmt)                           \
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c: In function 'test_size_t_le':
test/testutil/tests.c:196:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:205:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, le, <=, fmt)                          \
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c:196:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:205:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, le, <=, fmt)                          \
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c:196:27: warning: too many arguments for format [-Wformat-extra-args]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:205:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, le, <=, fmt)                          \
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c: In function 'test_size_t_gt':
test/testutil/tests.c:196:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:206:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, gt, >, fmt)                           \
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c:196:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:206:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, gt, >, fmt)                           \
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c:196:27: warning: too many arguments for format [-Wformat-extra-args]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:206:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, gt, >, fmt)                           \
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c: In function 'test_size_t_ge':
test/testutil/tests.c:196:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:207:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, ge, >=, fmt)
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c:196:27: warning: unknown conversion type character 'z' in format [-Wformat=]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:207:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, ge, >=, fmt)
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
test/testutil/tests.c:196:27: warning: too many arguments for format [-Wformat-extra-args]
"[" fmt "] compared to [" fmt "]",            \
^
test/testutil/tests.c:207:5: note: in expansion of macro 'DEFINE_COMPARISON'
DEFINE_COMPARISON(type, name, ge, >=, fmt)
^~~~~~~~~~~~~~~~~
test/testutil/tests.c:215:1: note: in expansion of macro 'DEFINE_COMPARISONS'
DEFINE_COMPARISONS(size_t, size_t, "%zu")
^~~~~~~~~~~~~~~~~~
ar: creating libssl.a
ar: creating test/libtestutil.a
ar: creating libcrypto.a
Cloning into 'mitls-fstar'...
Checking out files:  84% (832/982)   Checking out files:  85% (835/982)   Checking out files:  86% (845/982)   Checking out files:  87% (855/982)   Checking out files:  88% (865/982)   Checking out files:  89% (874/982)   Checking out files:  90% (884/982)   Checking out files:  91% (894/982)   Checking out files:  92% (904/982)   Checking out files:  93% (914/982)   Checking out files:  94% (924/982)   Checking out files:  95% (933/982)   Checking out files:  96% (943/982)   Checking out files:  97% (953/982)   Checking out files:  98% (963/982)   Checking out files:  99% (973/982)   Checking out files: 100% (982/982)   Checking out files: 100% (982/982), done.
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Effect.assume_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 250) Error while extracting LowStar.ImmutableBuffer.ialloca_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

(Warning 250) Error while extracting LowStar.ImmutableBuffer.igcmalloc_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : FStar.Monotonic.HyperStack.mem, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_Monotonic_HyperStack_mem if any other module uses this definition
Warning 13: : FStar.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_UInt128_t if any other module uses this definition
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Hacl.Types.u32, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_u32 if any other module uses this definition
Warning 13: : Hacl.Types.h8, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_h8 if any other module uses this definition
Warning 13: : Hacl.Types.uint8_p, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_uint8_p if any other module uses this definition
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Spec.Poly1305.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file Spec.Poly1305.Lemmas.fst.checked; will recheck Spec.Poly1305.Lemmas.fst and all subsequent files
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Spec.Lib.fst(36,28-36,39): (Warning 288) Spec.Loops.repeat_spec is deprecated, use Spec.Loops.repeat instead
C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(36,28-36,39): (Warning 288) Spec.Loops.repeat_spec is deprecated, use Spec.Loops.repeat instead
Spec.Chacha20.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file Spec.Chacha20.Lemmas.fst.checked; will recheck Spec.Chacha20.Lemmas.fst and all subsequent files
Spec.Salsa20.fst(55,15-55,26): (Warning 288) Spec.Loops.repeat_spec is deprecated, use Spec.Loops.repeat instead
C:/build/agent2/_work/34/s/specs/Spec.MD5.fsti(0,0-0,0): (Warning 241) Stale cache file C:/build/agent2/_work/34/s/specs/Spec.MD5.fsti.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.MD5.fsti and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.SHA1.fsti(0,0-0,0): (Warning 241) Stale cache file C:/build/agent2/_work/34/s/specs/Spec.SHA1.fsti.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.SHA1.fsti and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.SHA2.fsti(0,0-0,0): (Warning 241) Stale cache file C:/build/agent2/_work/34/s/specs/Spec.SHA2.fsti.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.SHA2.fsti and all subsequent files
Spec.SHA1.fsti(0,0-0,0): (Warning 241) Stale cache file Spec.SHA1.fsti.checked; will recheck Spec.SHA1.fsti and all subsequent files
Spec.Poly1305.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file Spec.Poly1305.Lemmas.fst.checked; will recheck Spec.Poly1305.Lemmas.fst and all subsequent files
Spec.Lib.fst(36,28-36,39): (Warning 288) Spec.Loops.repeat_spec is deprecated, use Spec.Loops.repeat instead
C:/build/agent2/_work/34/s/specs/Spec.Hash.Nist.fst(0,0-0,0): (Warning 241) Stale cache file C:/build/agent2/_work/34/s/specs/Spec.Hash.Nist.fst.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.Hash.Nist.fst and all subsequent files
Spec.Hash.Nist.fst(0,0-0,0): (Warning 241) Stale cache file Spec.Hash.Nist.fst.checked; will recheck Spec.Hash.Nist.fst and all subsequent files
Not extracting Spec.SHA2.update to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Spec.Hash.Nist.fst(0,0-0,0): (Warning 241) Stale cache file Spec.Hash.Nist.fst.checked; will recheck Spec.Hash.Nist.fst and all subsequent files
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
scons: *** [obj\code\lib\util\operator.types.vaf] Explicit dependency `tools\Vale\bin\importFStarTypes.exe' not found, needed by target `obj\code\lib\util\operator.types.vaf'.

scons: warning: Two different environments were specified for target obj\ml_out\FStar_Pointer_Base.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\FStar_Pointer_Base.cmx obj\ml_out\FStar_Pointer_Base.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Opaque_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Opaque_s.cmx obj\ml_out\Opaque_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Collections_Seqs_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Collections_Seqs_s.cmx obj\ml_out\Collections_Seqs_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Words_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Words_s.cmx obj\ml_out\Words_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Words_Four_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Words_Four_s.cmx obj\ml_out\Words_Four_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Words_Two_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Words_Two_s.cmx obj\ml_out\Words_Two_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Words_Seq_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Words_Seq_s.cmx obj\ml_out\Words_Seq_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Types_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Types_s.cmx obj\ml_out\Types_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\TypesNative_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\TypesNative_s.cmx obj\ml_out\TypesNative_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Arch_TypesNative.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Arch_TypesNative.cmx obj\ml_out\Arch_TypesNative.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Collections_Seqs.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Collections_Seqs.cmx obj\ml_out\Collections_Seqs.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Util_Meta.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Util_Meta.cmx obj\ml_out\Util_Meta.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Words_Seq.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Words_Seq.cmx obj\ml_out\Words_Seq.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Words_Two.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Words_Two.cmx obj\ml_out\Words_Two.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Arch_Types.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Arch_Types.cmx obj\ml_out\Arch_Types.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Prop_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Prop_s.cmx obj\ml_out\Prop_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\AES_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\AES_s.cmx obj\ml_out\AES_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\GCTR_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\GCTR_s.cmx obj\ml_out\GCTR_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\GCM_helpers.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\GCM_helpers.cmx obj\ml_out\GCM_helpers.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\FStar_Kremlin_Endianness.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\FStar_Kremlin_Endianness.cmx obj\ml_out\FStar_Kremlin_Endianness.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\FStar_Endianness.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\FStar_Endianness.cmx obj\ml_out\FStar_Endianness.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Spec_Loops.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Spec_Loops.cmx obj\ml_out\Spec_Loops.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Spec_Lib.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Spec_Lib.cmx obj\ml_out\Spec_Lib.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Spec_Hash_Helpers.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Spec_Hash_Helpers.cmx obj\ml_out\Spec_Hash_Helpers.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Spec_Hash_Common.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Spec_Hash_Common.cmx obj\ml_out\Spec_Hash_Common.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Spec_SHA2_Constants.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Spec_SHA2_Constants.cmx obj\ml_out\Spec_SHA2_Constants.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Spec_SHA2.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Spec_SHA2.cmx obj\ml_out\Spec_SHA2.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_CryptoInstructions_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_CryptoInstructions_s.cmx obj\ml_out\X64_CryptoInstructions_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Machine_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Machine_s.cmx obj\ml_out\X64_Machine_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\BufferViewHelpers.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\BufferViewHelpers.cmx obj\ml_out\BufferViewHelpers.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\SecretByte.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\SecretByte.cmx obj\ml_out\SecretByte.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Views.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Views.cmx obj\ml_out\Views.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Math_Poly2_Defs_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Math_Poly2_Defs_s.cmx obj\ml_out\Math_Poly2_Defs_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Math_Poly2_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Math_Poly2_s.cmx obj\ml_out\Math_Poly2_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Math_Poly2_Bits_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Math_Poly2_Bits_s.cmx obj\ml_out\Math_Poly2_Bits_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Bytes_Semantics_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Bytes_Semantics_s.cmx obj\ml_out\X64_Bytes_Semantics_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Taint_Semantics_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Taint_Semantics_s.cmx obj\ml_out\X64_Taint_Semantics_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Bytes_Semantics.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Bytes_Semantics.cmx obj\ml_out\X64_Bytes_Semantics.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Interop.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Interop.cmx obj\ml_out\Interop.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\Math_Lemmas_Int.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\Math_Lemmas_Int.cmx obj\ml_out\Math_Lemmas_Int.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_BufferViewStore.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_BufferViewStore.cmx obj\ml_out\X64_BufferViewStore.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Memory_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Memory_s.cmx obj\ml_out\X64_Memory_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Memory.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Memory.cmx obj\ml_out\X64_Memory.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Print_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Print_s.cmx obj\ml_out\X64_Print_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Vale_Regs.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Vale_Regs.cmx obj\ml_out\X64_Vale_Regs.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Vale_Xmms.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Vale_Xmms.cmx obj\ml_out\X64_Vale_Xmms.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Vale_State.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Vale_State.cmx obj\ml_out\X64_Vale_State.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Semantics_s.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Semantics_s.cmx obj\ml_out\X64_Semantics_s.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Semantics_Equiv.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Semantics_Equiv.cmx obj\ml_out\X64_Semantics_Equiv.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Vale_StateLemmas.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Vale_StateLemmas.cmx obj\ml_out\X64_Vale_StateLemmas.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Vale_Lemmas.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Vale_Lemmas.cmx obj\ml_out\X64_Vale_Lemmas.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Vale_Decls.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Vale_Decls.cmx obj\ml_out\X64_Vale_Decls.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Taint_Semantics.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Taint_Semantics.cmx obj\ml_out\X64_Taint_Semantics.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Vale_InsLemmas.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Vale_InsLemmas.cmx obj\ml_out\X64_Vale_InsLemmas.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Vale_QuickCode.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Vale_QuickCode.cmx obj\ml_out\X64_Vale_QuickCode.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Vale_InsBasic.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Vale_InsBasic.cmx obj\ml_out\X64_Vale_InsBasic.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Vale_InsMem.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Vale_InsMem.cmx obj\ml_out\X64_Vale_InsMem.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Vale_QuickCodes.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Vale_QuickCodes.cmx obj\ml_out\X64_Vale_QuickCodes.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Vale_InsVector.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Vale_InsVector.cmx obj\ml_out\X64_Vale_InsVector.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\X64_Stack.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\X64_Stack.cmx obj\ml_out\X64_Stack.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx

scons: warning: Two different environments were specified for target obj\ml_out\CmdLineParser.cmx,
but they appear to have the same action: ocamlfind ocamlopt -c -package fstarlib -package fstar-tactics-lib -o obj\ml_out\CmdLineParser.cmx obj\ml_out\CmdLineParser.ml -I obj/ml_out
File "C:\build\agent2\_work\34\s\vale\SConstruct", line 954, in add_cmx
File "obj\ml_out\Words_Two_s.ml", line 119, characters 6-153:
Warning 8: this pattern-matching is not exhaustive.
All clauses in this pattern-matching are guarded.
File "obj\ml_out\Words_Two_s.ml", line 128, characters 8-255:
Warning 8: this pattern-matching is not exhaustive.
All clauses in this pattern-matching are guarded.
File "obj\ml_out\Words_Two_s.ml", line 37, characters 10-12:
Warning 26: unused variable n2.
File "obj\ml_out\Words_Two_s.ml", line 58, characters 10-12:
Warning 26: unused variable n2.
File "obj\ml_out\Words_Four_s.ml", line 233, characters 6-289:
Warning 8: this pattern-matching is not exhaustive.
All clauses in this pattern-matching are guarded.
File "obj\ml_out\Words_Four_s.ml", line 244, characters 8-1015:
Warning 8: this pattern-matching is not exhaustive.
All clauses in this pattern-matching are guarded.
File "obj\ml_out\Words_Four_s.ml", line 91, characters 10-12:
Warning 26: unused variable n4.
File "obj\ml_out\Words_Four_s.ml", line 133, characters 10-12:
Warning 26: unused variable n4.
File "obj\ml_out\Math_Poly2_s.ml", line 27, characters 73-75:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Math_Poly2_s.ml", line 32, characters 73-75:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Math_Poly2_s.ml", line 48, characters 73-75:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Words_Seq_s.ml", line 42, characters 8-9:
Warning 26: unused variable s.
File "obj\ml_out\Words_Seq_s.ml", line 48, characters 8-9:
Warning 26: unused variable s.
File "obj\ml_out\Words_Seq_s.ml", line 54, characters 8-9:
Warning 26: unused variable s.
File "obj\ml_out\Words_Seq_s.ml", line 60, characters 8-9:
Warning 26: unused variable s.
File "obj\ml_out\Types_s.ml", line 16, characters 10-12:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 16, characters 13-15:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 16, characters 16-18:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 25, characters 10-12:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 25, characters 13-15:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 25, characters 16-18:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 34, characters 10-12:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 34, characters 13-15:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 34, characters 16-18:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 40, characters 8-11:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 40, characters 12-15:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 49, characters 10-13:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 49, characters 14-17:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 49, characters 18-21:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 58, characters 10-13:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 58, characters 14-17:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 58, characters 18-21:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 177, characters 72-75:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 184, characters 6-9:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Types_s.ml", line 69, characters 8-10:
Warning 26: unused variable n4.
File "obj\ml_out\AES_s.ml", line 4, characters 74-76:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\AES_s.ml", line 9, characters 6-8:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\AES_s.ml", line 13, characters 69-71:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\AES_s.ml", line 17, characters 73-75:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\AES_s.ml", line 21, characters 73-75:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\AES_s.ml", line 26, characters 6-8:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\AES_s.ml", line 30, characters 71-73:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\AES_s.ml", line 34, characters 68-70:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_Hash_Helpers.ml", line 60, characters 52-54:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_Hash_Helpers.ml", line 149, characters 8-10:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_Hash_Helpers.ml", line 165, characters 10-12:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_Hash_Helpers.ml", line 165, characters 13-15:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\X64_Machine_s.ml", line 70, characters 20-56:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(MReg (_, _)|MIndex (_, _, _, _))
File "obj\ml_out\X64_Machine_s.ml", line 76, characters 20-63:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(MConst _|MIndex (_, _, _, _))
File "obj\ml_out\X64_Machine_s.ml", line 78, characters 20-68:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(MConst _|MIndex (_, _, _, _))
File "obj\ml_out\X64_Machine_s.ml", line 87, characters 4-68:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(MConst _|MReg (_, _))
File "obj\ml_out\X64_Machine_s.ml", line 91, characters 4-69:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(MConst _|MReg (_, _))
File "obj\ml_out\X64_Machine_s.ml", line 95, characters 4-70:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(MConst _|MReg (_, _))
File "obj\ml_out\X64_Machine_s.ml", line 99, characters 4-70:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(MConst _|MReg (_, _))
File "obj\ml_out\X64_Machine_s.ml", line 110, characters 20-56:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(OReg _|OMem _)
File "obj\ml_out\X64_Machine_s.ml", line 116, characters 20-54:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(OConst _|OMem _)
File "obj\ml_out\X64_Machine_s.ml", line 122, characters 20-54:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(OConst _|OReg _)
File "obj\ml_out\X64_Machine_s.ml", line 133, characters 20-59:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Mov128Mem _
File "obj\ml_out\X64_Machine_s.ml", line 139, characters 20-59:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
Mov128Xmm _
File "obj\ml_out\X64_Machine_s.ml", line 153, characters 20-57:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Block _|IfElse (_, _, _)|While (_, _))
File "obj\ml_out\X64_Machine_s.ml", line 162, characters 22-65:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Ins _|IfElse (_, _, _)|While (_, _))
File "obj\ml_out\X64_Machine_s.ml", line 173, characters 4-67:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Ins _|Block _|While (_, _))
File "obj\ml_out\X64_Machine_s.ml", line 179, characters 4-67:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Ins _|Block _|While (_, _))
File "obj\ml_out\X64_Machine_s.ml", line 185, characters 4-68:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Ins _|Block _|While (_, _))
File "obj\ml_out\X64_Machine_s.ml", line 197, characters 4-67:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Ins _|Block _|IfElse (_, _, _))
File "obj\ml_out\X64_Machine_s.ml", line 203, characters 4-67:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(Ins _|Block _|IfElse (_, _, _))
File "obj\ml_out\X64_Machine_s.ml", line 231, characters 20-71:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(MemAccess _|MemAccessOffset (_, _))
File "obj\ml_out\X64_Machine_s.ml", line 237, characters 20-65:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(BranchPredicate _|MemAccessOffset (_, _))
File "obj\ml_out\X64_Machine_s.ml", line 246, characters 4-64:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(BranchPredicate _|MemAccess _)
File "obj\ml_out\X64_Machine_s.ml", line 250, characters 4-66:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(BranchPredicate _|MemAccess _)
File "obj\ml_out\Spec_Hash_Common.ml", line 14, characters 10-24:
Warning 26: unused variable total_len_bits.
File "obj\ml_out\Spec_MD5.ml", line 673, characters 8-10:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_MD5.ml", line 673, characters 11-13:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 4, characters 4-265:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 12, characters 4-265:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 21, characters 6-290:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 35, characters 11-335:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 40, characters 10-12:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 40, characters 13-15:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 47, characters 11-331:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 52, characters 10-12:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 52, characters 13-15:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 59, characters 11-331:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 64, characters 10-12:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 64, characters 13-15:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 71, characters 11-327:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 75, characters 75-77:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 76, characters 10-12:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 82, characters 9-321:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 86, characters 74-76:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 94, characters 11-415:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 102, characters 52-55:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 102, characters 56-59:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 126, characters 11-1699:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 162, characters 38-41:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 162, characters 42-45:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 270, characters 4-214:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 284, characters 18-459:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 292, characters 57-60:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 292, characters 61-64:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 296, characters 21-486:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 304, characters 60-63:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 304, characters 64-67:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 308, characters 21-486:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 316, characters 60-63:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 316, characters 64-67:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 319, characters 22-495:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 327, characters 61-64:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 337, characters 18-459:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 345, characters 57-60:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 345, characters 61-64:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 349, characters 21-486:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 357, characters 60-63:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 357, characters 64-67:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 361, characters 21-486:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 369, characters 60-63:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 369, characters 64-67:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 373, characters 24-513:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 381, characters 63-66:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 381, characters 67-70:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 385, characters 24-513:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 393, characters 63-66:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 393, characters 67-70:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 401, characters 14-360:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 406, characters 20-23:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 406, characters 24-27:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 410, characters 17-2102:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 450, characters 74-77:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 451, characters 16-19:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 453, characters 14-260:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 461, characters 17-450:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 469, characters 56-59:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 469, characters 60-63:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 473, characters 20-2225:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 514, characters 19-22:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 514, characters 23-26:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 516, characters 17-275:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 524, characters 20-2225:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 565, characters 19-22:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 565, characters 23-26:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 567, characters 17-275:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 579, characters 14-360:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 584, characters 20-23:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 584, characters 24-27:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 588, characters 17-2102:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 628, characters 74-77:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 629, characters 16-19:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 631, characters 14-260:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 639, characters 17-450:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 647, characters 56-59:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 647, characters 60-63:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 651, characters 20-2225:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 692, characters 19-22:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 692, characters 23-26:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 694, characters 17-275:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 702, characters 20-2225:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 743, characters 19-22:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 743, characters 23-26:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 745, characters 17-275:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 757, characters 14-360:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 762, characters 20-23:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 762, characters 24-27:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 766, characters 17-2102:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 806, characters 74-77:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 807, characters 16-19:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 809, characters 14-260:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 817, characters 17-450:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 825, characters 56-59:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 825, characters 60-63:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 829, characters 20-2225:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 870, characters 19-22:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 870, characters 23-26:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 872, characters 17-275:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 880, characters 20-497:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 888, characters 64-67:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 888, characters 68-71:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 890, characters 17-275:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 902, characters 14-360:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 907, characters 20-23:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 907, characters 24-27:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 911, characters 17-2102:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 951, characters 74-77:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 952, characters 16-19:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 954, characters 14-260:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 962, characters 17-450:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 970, characters 56-59:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 970, characters 60-63:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 974, characters 20-2225:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1015, characters 19-22:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1015, characters 23-26:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1017, characters 17-275:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1025, characters 20-497:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1033, characters 64-67:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1033, characters 68-71:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1035, characters 17-275:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1044, characters 6-327:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1053, characters 6-343:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1079, characters 21-486:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1087, characters 60-63:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1087, characters 64-67:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1091, characters 24-2383:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1132, characters 23-26:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1132, characters 27-30:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1134, characters 21-295:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1142, characters 24-513:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1150, characters 63-66:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1150, characters 67-70:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1154, characters 27-2536:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1195, characters 33-36:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1195, characters 37-40:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1197, characters 24-310:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1205, characters 27-560:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1213, characters 71-74:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1214, characters 26-29:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1216, characters 24-310:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1226, characters 21-486:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1234, characters 60-63:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1234, characters 64-67:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1238, characters 24-2383:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1279, characters 23-26:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1279, characters 27-30:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1281, characters 21-295:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1289, characters 24-513:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1297, characters 63-66:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1297, characters 67-70:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1301, characters 27-2536:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1342, characters 33-36:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1342, characters 37-40:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1344, characters 24-310:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1352, characters 27-560:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1360, characters 71-74:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1361, characters 26-29:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1363, characters 24-310:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1372, characters 19-472:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1380, characters 59-62:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1380, characters 63-66:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1384, characters 22-499:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1392, characters 62-65:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1392, characters 66-69:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1396, characters 25-526:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1404, characters 65-68:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1404, characters 69-72:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1429, characters 20-481:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1437, characters 60-63:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1437, characters 64-67:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1441, characters 23-508:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1449, characters 63-66:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1449, characters 67-71:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1453, characters 26-531:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1461, characters 65-69:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1461, characters 70-74:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1465, characters 29-2788:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1509, characters 59-63:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1509, characters 64-68:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1511, characters 26-320:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1519, characters 29-558:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1527, characters 68-72:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1527, characters 73-77:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1531, characters 32-2923:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1575, characters 62-66:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1575, characters 67-71:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1577, characters 29-335:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1585, characters 32-2923:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1629, characters 62-66:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1629, characters 67-71:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1631, characters 29-335:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1639, characters 26-535:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1647, characters 66-70:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1647, characters 71-75:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1651, characters 29-558:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1659, characters 68-72:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1659, characters 73-77:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1663, characters 32-585:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1671, characters 71-75:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1672, characters 31-35:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1676, characters 32-585:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1684, characters 71-75:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1685, characters 31-35:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1688, characters 33-594:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1696, characters 72-76:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1701, characters 29-562:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1709, characters 69-73:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1710, characters 28-32:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1717, characters 20-481:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1725, characters 60-64:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1725, characters 65-69:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1729, characters 23-504:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1737, characters 62-66:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1737, characters 67-71:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1741, characters 26-2494:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1782, characters 32-36:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1782, characters 37-41:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1784, characters 23-305:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1792, characters 26-531:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1800, characters 65-69:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1800, characters 70-74:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1804, characters 29-2788:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1848, characters 59-63:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1848, characters 64-68:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1850, characters 26-320:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1858, characters 29-2788:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1902, characters 59-63:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1902, characters 64-68:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1904, characters 26-320:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1912, characters 23-504:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1920, characters 62-66:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1920, characters 67-71:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1924, characters 26-531:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1932, characters 65-69:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1932, characters 70-74:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1937, characters 26-531:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1945, characters 65-69:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1945, characters 70-74:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1949, characters 29-558:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1957, characters 68-72:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1957, characters 73-77:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1962, characters 29-558:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1970, characters 68-72:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1970, characters 73-77:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1977, characters 22-499:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 1985, characters 62-66:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1985, characters 67-71:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 1993, characters 21-490:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 2001, characters 61-65:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 2001, characters 66-70:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 2017, characters 10-292:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 2042, characters 18-452:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
(SHA1|MD5)
File "obj\ml_out\Spec_SHA2.ml", line 2050, characters 55-59:
Warning 20: this argument will not be used by the function.
File "obj\ml_out\Spec_SHA2.ml", line 2050, characters 60-64:
Warning 20: this argument will not be used by the function.
obj\external\Spec.Hash.fst(0,0-0,0): (Warning 247) obj\external\Spec.Hash.fst.checked was not written, since some of its dependences were not also checked
scons: *** [obj\code\arch\x64\X64.Vale.InsBasic.types.vaf] Explicit dependency `tools\Vale\bin\importFStarTypes.exe' not found, needed by target `obj\code\arch\x64\X64.Vale.InsBasic.types.vaf'.
C:/build/agent2/_work/34/s/code/hash-new/Hacl.SHA1.fst(18,0-18,56): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.SHA1.fst(18,0-18,56): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.MD5.fst(18,0-18,56): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.MD5.fst(18,0-18,56): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.MD5.fst(19,0-19,52): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.MD5.fst(19,0-19,52): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.SHA2.fst(39,0-39,56): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.SHA2.fst(39,0-39,56): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.SHA2.fst(40,0-40,56): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.SHA2.fst(40,0-40,56): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.SHA2.fst(41,0-41,56): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.SHA2.fst(41,0-41,56): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.SHA2.fst(42,0-42,56): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.SHA2.fst(42,0-42,56): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.SHA2.fst(65,0-65,64): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.SHA2.fst(65,0-65,64): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.SHA2.fst(66,0-66,64): (Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/code/hash-new/Hacl.SHA2.fst(66,0-66,64): (Warning 272) Top-level let-bindings must be total; this term may have effects
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Effect.assume_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting Spec.SHA2.update to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 250) Error while extracting LowStar.ImmutableBuffer.ialloca_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

(Warning 250) Error while extracting LowStar.ImmutableBuffer.igcmalloc_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : FStar.Monotonic.HyperStack.mem, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_Monotonic_HyperStack_mem if any other module uses this definition
Warning 13: : FStar.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_UInt128_t if any other module uses this definition
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Hacl.Types.u32, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_u32 if any other module uses this definition
Warning 13: : Hacl.Types.h8, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_h8 if any other module uses this definition
Warning 13: : Hacl.Types.uint8_p, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_uint8_p if any other module uses this definition
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Effect.assume_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting Spec.SHA2.update to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 250) Error while extracting LowStar.ImmutableBuffer.ialloca_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

(Warning 250) Error while extracting LowStar.ImmutableBuffer.igcmalloc_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : FStar.Monotonic.HyperStack.mem, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_Monotonic_HyperStack_mem if any other module uses this definition
Warning 13: : FStar.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_UInt128_t if any other module uses this definition
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Hacl.Types.u32, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_u32 if any other module uses this definition
Warning 13: : Hacl.Types.h8, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_h8 if any other module uses this definition
Warning 13: : Hacl.Types.uint8_p, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_uint8_p if any other module uses this definition
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Effect.assume_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting Spec.SHA2.update to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 250) Error while extracting LowStar.ImmutableBuffer.ialloca_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

(Warning 250) Error while extracting LowStar.ImmutableBuffer.igcmalloc_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : FStar.Monotonic.HyperStack.mem, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_Monotonic_HyperStack_mem if any other module uses this definition
Warning 13: : FStar.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_UInt128_t if any other module uses this definition
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Hacl.Types.u32, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_u32 if any other module uses this definition
Warning 13: : Hacl.Types.h8, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_h8 if any other module uses this definition
Warning 13: : Hacl.Types.uint8_p, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_uint8_p if any other module uses this definition
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Effect.assume_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting Spec.SHA2.update to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 250) Error while extracting LowStar.ImmutableBuffer.ialloca_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

(Warning 250) Error while extracting LowStar.ImmutableBuffer.igcmalloc_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : FStar.Monotonic.HyperStack.mem, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_Monotonic_HyperStack_mem if any other module uses this definition
Warning 13: : FStar.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_UInt128_t if any other module uses this definition
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Hacl.Types.u32, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_u32 if any other module uses this definition
Warning 13: : Hacl.Types.h8, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_h8 if any other module uses this definition
Warning 13: : Hacl.Types.uint8_p, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_uint8_p if any other module uses this definition
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Effect.assume_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting Spec.SHA2.update to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 250) Error while extracting LowStar.ImmutableBuffer.ialloca_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

(Warning 250) Error while extracting LowStar.ImmutableBuffer.igcmalloc_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : FStar.Monotonic.HyperStack.mem, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_Monotonic_HyperStack_mem if any other module uses this definition
Warning 13: : FStar.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_UInt128_t if any other module uses this definition
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Hacl.Types.u32, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_u32 if any other module uses this definition
Warning 13: : Hacl.Types.h8, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_h8 if any other module uses this definition
Warning 13: : Hacl.Types.uint8_p, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_uint8_p if any other module uses this definition
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Effect.assume_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting Spec.SHA2.update to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 250) Error while extracting LowStar.ImmutableBuffer.ialloca_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

(Warning 250) Error while extracting LowStar.ImmutableBuffer.igcmalloc_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : FStar.Monotonic.HyperStack.mem, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_Monotonic_HyperStack_mem if any other module uses this definition
Warning 13: : FStar.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_UInt128_t if any other module uses this definition
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Hacl.Types.u32, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_u32 if any other module uses this definition
Warning 13: : Hacl.Types.h8, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_h8 if any other module uses this definition
Warning 13: : Hacl.Types.uint8_p, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_uint8_p if any other module uses this definition
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Effect.assume_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting Spec.SHA2.update to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 250) Error while extracting LowStar.ImmutableBuffer.ialloca_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

(Warning 250) Error while extracting LowStar.ImmutableBuffer.igcmalloc_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : FStar.Monotonic.HyperStack.mem, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_Monotonic_HyperStack_mem if any other module uses this definition
Warning 13: : FStar.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_UInt128_t if any other module uses this definition
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Hacl.Types.u32, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_u32 if any other module uses this definition
Warning 13: : Hacl.Types.h8, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_h8 if any other module uses this definition
Warning 13: : Hacl.Types.uint8_p, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_uint8_p if any other module uses this definition
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Effect.assume_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting Spec.SHA2.update to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 250) Error while extracting LowStar.ImmutableBuffer.ialloca_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

(Warning 250) Error while extracting LowStar.ImmutableBuffer.igcmalloc_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : FStar.Monotonic.HyperStack.mem, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_Monotonic_HyperStack_mem if any other module uses this definition
Warning 13: : FStar.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_UInt128_t if any other module uses this definition
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Hacl.Types.u32, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_u32 if any other module uses this definition
Warning 13: : Hacl.Types.h8, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_h8 if any other module uses this definition
Warning 13: : Hacl.Types.uint8_p, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_uint8_p if any other module uses this definition
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Effect.assume_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting Spec.SHA2.update to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 250) Error while extracting LowStar.ImmutableBuffer.ialloca_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

(Warning 250) Error while extracting LowStar.ImmutableBuffer.igcmalloc_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : FStar.Monotonic.HyperStack.mem, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_Monotonic_HyperStack_mem if any other module uses this definition
Warning 13: : FStar.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_UInt128_t if any other module uses this definition
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Hacl.Types.u32, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_u32 if any other module uses this definition
Warning 13: : Hacl.Types.h8, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_h8 if any other module uses this definition
Warning 13: : Hacl.Types.uint8_p, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_uint8_p if any other module uses this definition
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Effect.assume_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting Spec.SHA2.update to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 250) Error while extracting LowStar.ImmutableBuffer.ialloca_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

(Warning 250) Error while extracting LowStar.ImmutableBuffer.igcmalloc_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : FStar.Monotonic.HyperStack.mem, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_Monotonic_HyperStack_mem if any other module uses this definition
Warning 13: : FStar.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_UInt128_t if any other module uses this definition
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Hacl.Types.u32, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_u32 if any other module uses this definition
Warning 13: : Hacl.Types.h8, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_h8 if any other module uses this definition
Warning 13: : Hacl.Types.uint8_p, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_uint8_p if any other module uses this definition
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Effect.assume_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting Spec.SHA2.update to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 250) Error while extracting LowStar.ImmutableBuffer.ialloca_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

(Warning 250) Error while extracting LowStar.ImmutableBuffer.igcmalloc_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : FStar.Monotonic.HyperStack.mem, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_Monotonic_HyperStack_mem if any other module uses this definition
Warning 13: : FStar.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_UInt128_t if any other module uses this definition
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Hacl.Types.u32, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_u32 if any other module uses this definition
Warning 13: : Hacl.Types.h8, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_h8 if any other module uses this definition
Warning 13: : Hacl.Types.uint8_p, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_uint8_p if any other module uses this definition
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Effect.assume_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting Spec.SHA2.update to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 250) Error while extracting LowStar.ImmutableBuffer.ialloca_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

(Warning 250) Error while extracting LowStar.ImmutableBuffer.igcmalloc_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Prims.nat, a monomorphic instance, is first used, and therefore inserted, in file Prims which is about to be dropped; you may get a C compiler error about Prims_nat if any other module uses this definition
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : FStar.Monotonic.HyperStack.mem, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_Monotonic_HyperStack_mem if any other module uses this definition
Warning 13: : FStar.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_UInt128_t if any other module uses this definition
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Hacl.Types.u32, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_u32 if any other module uses this definition
Warning 13: : Hacl.Types.h8, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_h8 if any other module uses this definition
Warning 13: : Hacl.Types.uint8_p, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_uint8_p if any other module uses this definition
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Effect.assume_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting Spec.SHA2.update to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 250) Error while extracting LowStar.ImmutableBuffer.ialloca_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

(Warning 250) Error while extracting LowStar.ImmutableBuffer.igcmalloc_of_list to KreMLin (Failure("Argument of FStar.Buffer.createL is not a list literal!"))

Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 13: : FStar.Monotonic.HyperStack.mem, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_Monotonic_HyperStack_mem if any other module uses this definition
Warning 13: : FStar.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file FStar which is about to be dropped; you may get a C compiler error about FStar_UInt128_t if any other module uses this definition
Warning 13: : Hacl.UInt128.t, a monomorphic instance, is first used, and therefore inserted, in file Hacl_UInt128 which is about to be dropped; you may get a C compiler error about Hacl_UInt128_t if any other module uses this definition
Warning 13: : Hacl.Types.u32, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_u32 if any other module uses this definition
Warning 13: : Hacl.Types.h8, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_h8 if any other module uses this definition
Warning 13: : Hacl.Types.uint8_p, a monomorphic instance, is first used, and therefore inserted, in file Hacl_Types which is about to be dropped; you may get a C compiler error about Hacl_Types_uint8_p if any other module uses this definition
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
C:\build\agent2\_work\34\s\fstar\bin\..\ulib\prims.fst(0,0-0,0): (Warning 241) Corrupt cache file ..\secure_api\out\runtime_switch\cache\prims.fst.checked.lax; will recheck C:\build\agent2\_work\34\s\fstar\bin\..\ulib\prims.fst and all subsequent files
C:\build\agent2\_work\34\s\fstar\ulib\prims.fst(0,0-0,0): (Warning 241) Corrupt cache file ..\secure_api\out\runtime_switch\cache\prims.fst.checked.lax; will recheck C:\build\agent2\_work\34\s\fstar\ulib\prims.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Pervasives.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Pervasives.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Pervasives.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Mul.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Mul.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Mul.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Squash.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Squash.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Squash.fsti and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.StrongExcludedMiddle.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.StrongExcludedMiddle.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.StrongExcludedMiddle.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Squash.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Squash.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Squash.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Preorder.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Preorder.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Preorder.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.PropositionalExtensionality.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.PropositionalExtensionality.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.PropositionalExtensionality.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Range.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Range.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Range.fsti and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.FunctionalExtensionality.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.FunctionalExtensionality.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.FunctionalExtensionality.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.Types.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Reflection.Types.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.Types.fsti and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Ghost.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Ghost.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Ghost.fsti and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Classical.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Classical.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Classical.fsti and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Exn.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Exn.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Exn.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.Const.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Reflection.Const.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.Const.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Order.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Order.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Order.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Float.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Float.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Float.fsti and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Universe.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Universe.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Universe.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Universe.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Universe.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Universe.fsti and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Int.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int.fst and all subsequent files
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Math.Lib.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Math.Lib.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Math.Lib.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Classical.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Classical.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Classical.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.ErasedLogic.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.ErasedLogic.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.ErasedLogic.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.PredicateExtensionality.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.PredicateExtensionality.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.PredicateExtensionality.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.List.Tot.Base.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.List.Tot.Base.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.List.Tot.Base.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Set.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Set.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Set.fst and all subsequent files
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Monotonic.Witnessed.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Monotonic.Witnessed.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Monotonic.Witnessed.fsti and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.Types.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Tactics.Types.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.Types.fsti and all subsequent files
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Monotonic.Witnessed.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Monotonic.Witnessed.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Monotonic.Witnessed.fst and all subsequent files
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.Data.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Reflection.Data.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.Data.fst and all subsequent files
Not extracting type definition FStar.Float.float to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.GSet.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.GSet.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.GSet.fst and all subsequent files
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.Basic.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Reflection.Basic.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.Basic.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.Result.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Tactics.Result.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.Result.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.TSet.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.TSet.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.TSet.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Map.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Map.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Map.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Math.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Math.Lemmas.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Math.Lemmas.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.Effect.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Tactics.Effect.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.Effect.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.List.Tot.Properties.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.List.Tot.Properties.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.List.Tot.Properties.fst and all subsequent files
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.Builtins.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Tactics.Builtins.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.Builtins.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Monotonic.Heap.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Monotonic.Heap.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Monotonic.Heap.fsti and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.List.Tot.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.List.Tot.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.List.Tot.fst and all subsequent files
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Heap.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Heap.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Heap.fst and all subsequent files
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.Util.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Tactics.Util.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.Util.fst and all subsequent files
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.ST.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.ST.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.ST.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Monotonic.HyperHeap.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Monotonic.HyperHeap.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Monotonic.HyperHeap.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Seq.Base.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Seq.Base.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Seq.Base.fst and all subsequent files
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Dyn.dyn to KreMLin (assumed type)
Not extracting FStar.Dyn.mkdyn to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Dyn.undyn to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.All.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.All.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.All.fst and all subsequent files
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.List.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.List.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.List.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Monotonic.HyperStack.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Monotonic.HyperStack.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Monotonic.HyperStack.fst and all subsequent files
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.HyperStack.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.HyperStack.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.HyperStack.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Seq.Properties.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Seq.Properties.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Seq.Properties.fst and all subsequent files
Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.HyperStack.ST.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.HyperStack.ST.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.HyperStack.ST.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Seq.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Seq.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Seq.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.HyperStack.All.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.HyperStack.All.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.HyperStack.All.fst and all subsequent files
C:/build/agent2/_work/34/s/kremlin/kremlib/compat/Spec.Loops.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\kremlin\kremlib\compat\Spec.Loops.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/kremlin/kremlib/compat/Spec.Loops.fst and all subsequent files
Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
C:/build/agent2/_work/34/s/specs/Spec.CTR.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\Spec.CTR.Lemmas.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/specs/Spec.CTR.Lemmas.fst and all subsequent files
Not extracting type definition FStar.Char.char to KreMLin (assumed type)
C:/build/agent2/_work/34/s/specs/Seq.Create.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\Seq.Create.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/specs/Seq.Create.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.BitVector.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.BitVector.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.BitVector.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.ModifiesGen.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.ModifiesGen.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.ModifiesGen.fsti and all subsequent files
Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
C:/build/agent2/_work/34/s/kremlin/kremlib/compat/C.Nullity.fsti(60,38-60,60): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Prims.eqtype; got type Type0 (see also prims.fst(27,22-27,29))
C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.UInt.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.Poly1305.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\Spec.Poly1305.Lemmas.fst.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.Poly1305.Lemmas.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt32.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.UInt32.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt32.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int16.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Int16.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int16.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int64.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Int64.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int64.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int63.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Int63.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int63.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int32.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Int32.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int32.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int8.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Int8.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int8.fst and all subsequent files
Not extracting type definition FStar.Bytes.bytes to KreMLin (assumed type)
Not extracting FStar.Bytes.empty_bytes to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt64.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.UInt64.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt64.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt63.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.UInt63.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt63.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt16.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.UInt16.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt16.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.ModifiesGen.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.ModifiesGen.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.ModifiesGen.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt8.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.UInt8.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt8.fst and all subsequent files
C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.UInt64.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\lib\kremlin\Hacl.UInt64.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.UInt64.fst and all subsequent files
C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.UInt32.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\lib\kremlin\Hacl.UInt32.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.UInt32.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt128.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.UInt128.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt128.fsti and all subsequent files
Not extracting LowStar.ToFStarBuffer.new_to_old_st to KreMLin (polymorphic assumes are not supported)
Not extracting LowStar.ToFStarBuffer.old_to_new_st to KreMLin (polymorphic assumes are not supported)
C:/build/agent2/_work/34/s/specs/Spec.Poly1305.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\specs\Spec.Poly1305.Lemmas.fst.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.Poly1305.Lemmas.fst and all subsequent files
C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.UInt16.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\lib\kremlin\Hacl.UInt16.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.UInt16.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Char.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Char.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Char.fsti and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.Poly1305.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\Spec.Poly1305.fst.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.Poly1305.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.Poly1305.fst(59,20-59,21): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Spec.Poly1305.elem; got type FStar.UInt.uint_t 128 (see also C:/build/agent2/_work/34/s/specs/Spec.Poly1305.fst(16,28-16,37))
C:/build/agent2/_work/34/s/fstar/ulib/FStar.IO.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.IO.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.IO.fst and all subsequent files
C:/build/agent2/_work/34/s/kremlin/kremlib/compat/FStar.Kremlin.Endianness.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\kremlin\kremlib\compat\FStar.Kremlin.Endianness.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/kremlin/kremlib/compat/FStar.Kremlin.Endianness.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Buffer.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Buffer.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Buffer.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int.Cast.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Int.Cast.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int.Cast.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/LowStar.Monotonic.Buffer.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\LowStar.Monotonic.Buffer.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/LowStar.Monotonic.Buffer.fsti and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/LowStar.Monotonic.Buffer.fsti(1585,51-1585,68): (Warning 288) FStar.Monotonic.HyperStack.is_eternal_region is deprecated, use FStar.HyperStack.ST.is_eternal_region instead
C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.UInt8.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\lib\kremlin\Hacl.UInt8.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.UInt8.fst and all subsequent files
Not extracting type definition FStar.Char.char to KreMLin (assumed type)
C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.UInt128.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\lib\kremlin\Hacl.UInt128.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.UInt128.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.String.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.String.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.String.fsti and all subsequent files
Not extracting exception EOF to KreMLin (exceptions unsupported)
Not extracting type definition FStar.IO.fd_read to KreMLin (assumed type)
Not extracting type definition FStar.IO.fd_write to KreMLin (assumed type)
Not extracting FStar.IO.print_any to KreMLin (polymorphic assumes are not supported)
C:/build/agent2/_work/34/s/kremlin/kremlib/compat/C.Nullity.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\kremlin\kremlib\compat\C.Nullity.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/kremlin/kremlib/compat/C.Nullity.fsti and all subsequent files
C:/build/agent2/_work/34/s/kremlin/kremlib/compat/C.Loops.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\kremlin\kremlib\compat\C.Loops.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/kremlin/kremlib/compat/C.Loops.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/LowStar.Buffer.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\LowStar.Buffer.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/LowStar.Buffer.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int.Cast.Full.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Int.Cast.Full.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Int.Cast.Full.fst and all subsequent files
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Bignum.Constants.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\poly1305\Hacl.Bignum.Constants.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/poly1305/Hacl.Bignum.Constants.fst and all subsequent files
C:/build/agent2/_work/34/s/kremlin/kremlib/compat/C.Endianness.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\kremlin\kremlib\compat\C.Endianness.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/kremlin/kremlib/compat/C.Endianness.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.Derived.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Reflection.Derived.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.Derived.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt128.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.UInt128.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.UInt128.fst and all subsequent files
Not extracting type definition C.channel to KreMLin (assumed type)
Not extracting C.stdout to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting C.stderr to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition C.intptr_t to KreMLin (assumed type)
Not extracting C.nullptr to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition C.char to KreMLin (assumed type)
Not extracting type definition C.int to KreMLin (assumed type)
Not extracting type definition C.clock_t to KreMLin (assumed type)
C:/build/agent2/_work/34/s/fstar/ulib/LowStar.Modifies.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\LowStar.Modifies.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/LowStar.Modifies.fst and all subsequent files
Not extracting C.Nullity.is_null to KreMLin (polymorphic assumes are not supported)
Not extracting C.Nullity.null to KreMLin (polymorphic assumes are not supported)
C:/build/agent2/_work/34/s/code/bignum/Hacl.Spec.Bignum.Field.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\bignum\Hacl.Spec.Bignum.Field.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/bignum/Hacl.Spec.Bignum.Field.fst and all subsequent files
C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.Cast.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\lib\kremlin\Hacl.Cast.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.Cast.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.Poly1305.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\specs\Spec.Poly1305.fst.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.Poly1305.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.Poly1305.fst(59,20-59,21): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Spec.Poly1305.elem; got type FStar.UInt.uint_t 128 (see also C:/build/agent2/_work/34/s/specs/Spec.Poly1305.fst(16,28-16,37))
C:/build/agent2/_work/34/s/code/lib/kremlin/FStar.Endianness.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\lib\kremlin\FStar.Endianness.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/lib/kremlin/FStar.Endianness.fst and all subsequent files
C:/build/agent2/_work/34/s/kremlin/kremlib/compat/C.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\kremlin\kremlib\compat\C.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/kremlin/kremlib/compat/C.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.Derived.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Reflection.Derived.Lemmas.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.Derived.Lemmas.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.Formula.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Reflection.Formula.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.Formula.fst and all subsequent files
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Bignum.Parameters.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\poly1305\Hacl.Bignum.Parameters.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/poly1305/Hacl.Bignum.Parameters.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.Poly1305.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\Spec.Poly1305.Lemmas.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/specs/Spec.Poly1305.Lemmas.fst and all subsequent files
C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.Spec.Endianness.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\lib\kremlin\Hacl.Spec.Endianness.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.Spec.Endianness.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Reflection.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Reflection.fst and all subsequent files
Not extracting type definition C.channel to KreMLin (assumed type)
Not extracting C.stdout to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting C.stderr to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition C.intptr_t to KreMLin (assumed type)
Not extracting C.nullptr to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition C.char to KreMLin (assumed type)
Not extracting type definition C.int to KreMLin (assumed type)
Not extracting type definition C.clock_t to KreMLin (assumed type)
Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\Spec.Lib.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/specs/Spec.Lib.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.Poly1305.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\Spec.Poly1305.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/specs/Spec.Poly1305.fst and all subsequent files
C:/build/agent2/_work/34/s/kremlin/kremlib/compat/C.String.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\kremlin\kremlib\compat\C.String.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/kremlin/kremlib/compat/C.String.fst and all subsequent files
C:/build/agent2/_work/34/s/code/bignum/Hacl.Bignum.Wide.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\bignum\Hacl.Bignum.Wide.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/bignum/Hacl.Bignum.Wide.fst and all subsequent files
C:/build/agent2/_work/34/s/code/bignum/Hacl.Bignum.Limb.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\bignum\Hacl.Bignum.Limb.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/bignum/Hacl.Bignum.Limb.fst and all subsequent files
Not extracting type definition FStar.Bytes.bytes to KreMLin (assumed type)
Not extracting FStar.Bytes.empty_bytes to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.Endianness.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\lib\kremlin\Hacl.Endianness.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/lib/kremlin/Hacl.Endianness.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.Derived.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Tactics.Derived.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.Derived.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.CTR.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\Spec.CTR.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/specs/Spec.CTR.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.Chacha20.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\Spec.Chacha20.Lemmas.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/specs/Spec.Chacha20.Lemmas.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/old/Spec.SHA2_256.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\old\Spec.SHA2_256.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/specs/old/Spec.SHA2_256.fst and all subsequent files
C:/build/agent2/_work/34/s/code/salsa-family/Hacl.Impl.Xor.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\salsa-family\Hacl.Impl.Xor.Lemmas.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/salsa-family/Hacl.Impl.Xor.Lemmas.fst and all subsequent files
C:/build/agent2/_work/34/s/code/hash/Hacl.Hash.Lib.Create.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\hash\Hacl.Hash.Lib.Create.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/hash/Hacl.Hash.Lib.Create.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/old/Spec.SHA2_384.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\old\Spec.SHA2_384.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/specs/old/Spec.SHA2_384.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/old/Spec.SHA2_512.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\old\Spec.SHA2_512.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/specs/old/Spec.SHA2_512.fst and all subsequent files
C:/build/agent2/_work/34/s/kremlin/kremlib/compat/TestLib.fsti(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\kremlin\kremlib\compat\TestLib.fsti.checked.lax; will recheck C:/build/agent2/_work/34/s/kremlin/kremlib/compat/TestLib.fsti and all subsequent files
C:/build/agent2/_work/34/s/code/bignum/Hacl.Spec.Bignum.Bigint.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\bignum\Hacl.Spec.Bignum.Bigint.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/bignum/Hacl.Spec.Bignum.Bigint.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.Logic.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Tactics.Logic.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.Logic.fst and all subsequent files
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
C:/build/agent2/_work/34/s/code/hash/Hacl.Hash.Lib.LoadStore.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\hash\Hacl.Hash.Lib.LoadStore.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/hash/Hacl.Hash.Lib.LoadStore.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.Chacha20.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\Spec.Chacha20.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/specs/Spec.Chacha20.fst and all subsequent files
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Spec.Poly1305_64.State.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\poly1305\Hacl.Spec.Poly1305_64.State.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/poly1305/Hacl.Spec.Poly1305_64.State.fst and all subsequent files
C:/build/agent2/_work/34/s/code/salsa-family/Hacl.Lib.LoadStore32.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\salsa-family\Hacl.Lib.LoadStore32.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/salsa-family/Hacl.Lib.LoadStore32.fst and all subsequent files
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_512.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\hash\Hacl.Impl.SHA2_512.Lemmas.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_512.Lemmas.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/old/Spec.HMAC.SHA2_256.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\old\Spec.HMAC.SHA2_256.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/specs/old/Spec.HMAC.SHA2_256.fst and all subsequent files
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_384.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\hash\Hacl.Impl.SHA2_384.Lemmas.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_384.Lemmas.fst and all subsequent files
Not extracting TestLib.uint8_p_null to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting TestLib.uint32_p_null to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting TestLib.uint64_p_null to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition TestLib.cycles to KreMLin (assumed type)
C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\FStar.Tactics.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/FStar.Tactics.fst and all subsequent files
Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Spec.Bignum.Modulo.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\poly1305\Hacl.Spec.Bignum.Modulo.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/poly1305/Hacl.Spec.Bignum.Modulo.fst and all subsequent files
C:/build/agent2/_work/34/s/code/bignum/Hacl.Spec.Bignum.Fsum.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\bignum\Hacl.Spec.Bignum.Fsum.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/bignum/Hacl.Spec.Bignum.Fsum.fst and all subsequent files
C:/build/agent2/_work/34/s/fstar/ulib/LowStar.Monotonic.Buffer.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\fstar\bin\..\ulib\LowStar.Monotonic.Buffer.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/fstar/ulib/LowStar.Monotonic.Buffer.fst and all subsequent files
C:\build\agent2\_work\34\s\fstar\ulib\LowStar.Monotonic.Buffer.fsti(1585,51-1585,68): (Warning 288) FStar.Monotonic.HyperStack.is_eternal_region is deprecated, use FStar.HyperStack.ST.is_eternal_region instead
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_256.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\hash\Hacl.Impl.SHA2_256.Lemmas.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_256.Lemmas.fst and all subsequent files
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Impl.Poly1305_64.State.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\poly1305\Hacl.Impl.Poly1305_64.State.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/poly1305/Hacl.Impl.Poly1305_64.State.fst and all subsequent files
Not extracting Spec.Chacha20.rounds to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
C:/build/agent2/_work/34/s/code/salsa-family/Hacl.Impl.Chacha20.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\salsa-family\Hacl.Impl.Chacha20.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/salsa-family/Hacl.Impl.Chacha20.fst and all subsequent files
C:/build/agent2/_work/34/s/code/bignum/Hacl.Spec.Bignum.Fproduct.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\bignum\Hacl.Spec.Bignum.Fproduct.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/bignum/Hacl.Spec.Bignum.Fproduct.fst and all subsequent files
C:/build/agent2/_work/34/s/code/bignum/Hacl.Bignum.Fsum.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\bignum\Hacl.Bignum.Fsum.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/bignum/Hacl.Bignum.Fsum.fst and all subsequent files
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Bignum.Modulo.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\poly1305\Hacl.Bignum.Modulo.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/poly1305/Hacl.Bignum.Modulo.fst and all subsequent files
C:/build/agent2/_work/34/s/code/bignum/Hacl.Spec.Bignum.Fmul.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\bignum\Hacl.Spec.Bignum.Fmul.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/bignum/Hacl.Spec.Bignum.Fmul.fst and all subsequent files
C:/build/agent2/_work/34/s/code/bignum/Hacl.Bignum.Fproduct.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\bignum\Hacl.Bignum.Fproduct.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/bignum/Hacl.Bignum.Fproduct.fst and all subsequent files
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Spec.Bignum.AddAndMultiply.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\poly1305\Hacl.Spec.Bignum.AddAndMultiply.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/poly1305/Hacl.Spec.Bignum.AddAndMultiply.fst and all subsequent files
C:/build/agent2/_work/34/s/code/bignum/Hacl.Bignum.Fmul.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\bignum\Hacl.Bignum.Fmul.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/bignum/Hacl.Bignum.Fmul.fst and all subsequent files
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Bignum.AddAndMultiply.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\poly1305\Hacl.Bignum.AddAndMultiply.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/poly1305/Hacl.Bignum.AddAndMultiply.fst and all subsequent files
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Spec.Poly1305_64.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\poly1305\Hacl.Spec.Poly1305_64.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/poly1305/Hacl.Spec.Poly1305_64.fst and all subsequent files
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Spe.Poly1305_64.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\poly1305\Hacl.Spe.Poly1305_64.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/poly1305/Hacl.Spe.Poly1305_64.fst and all subsequent files
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Impl.Poly1305_64.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\poly1305\Hacl.Impl.Poly1305_64.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/poly1305/Hacl.Impl.Poly1305_64.fst and all subsequent files
C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.MAC.fst(46,31-46,42): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.MAC.fst(505,40-505,51): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.UF1CMA.fst(388,31-388,42): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.UF1CMA.fst(401,61-401,72): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.UF1CMA.fst(404,68-404,79): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.UF1CMA.fst(455,15-455,26): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/prf/Crypto.Symmetric.PRF.fst(177,36-177,47): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/prf/Crypto.Symmetric.PRF.fst(212,47-212,58): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Encoding.fst(66,8-66,19): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Encoding.fst(544,37-544,48): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Encoding.fst(552,67-552,78): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_256.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\hash\Hacl.Impl.SHA2_256.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_256.fst and all subsequent files
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Invariant.fst(195,8-195,19): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Invariant.fst(603,83-603,94): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_512.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\hash\Hacl.Impl.SHA2_512.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_512.fst and all subsequent files
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.EnxorDexor.fst(114,27-114,38): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.EnxorDexor.fst(527,52-527,63): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_384.fst(0,0-0,0): (Warning 241) Stale cache file ..\code\hash\Hacl.Impl.SHA2_384.fst.checked.lax; will recheck C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_384.fst and all subsequent files
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.fst(62,41-62,52): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
Warning 6: in the definition of buf, after the definition of m0, in the last element of the sequence, in top-level declaration Crypto.Symmetric.Bytes.random_bytes, in file Crypto_Symmetric_Bytes: stack newbuf 0uint8 @1 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 15: : Crypto.Symmetric.Bytes.hex2 is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : Crypto.Symmetric.Bytes.hex1 is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.IO.debug_print_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : FStar.Seq.Base.append__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.empty__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Properties.last__uint8_t is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.hd__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.cons__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.tl__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.index__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.List.Tot.Base.tl__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.List.Tot.Base.tail__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.List.Tot.Base.hd__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.length__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.seq__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.list__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.UInt8.to_string is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : Prims.strcat is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : Prims.pow2 is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_GreaterThan is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Modulus is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Addition is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Subtraction is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Division is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Multiply is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 6: in the definition of state, after the definition of pos_T, in the last element of the sequence, in top-level declaration Crypto.HKDF.hkdf_expand, in file Crypto_HKDF_Crypto_HMAC: stack newbuf 0uint8 (+,uint32) (+,uint32) @7 @3 @4 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of state0, after the definition of h0, in the last element of the sequence, in top-level declaration Crypto.HMAC.hmac_part1, in file Crypto_HKDF_Crypto_HMAC: stack newbuf 0uint32 match @4 with | λ .  SHA256 () ->  137uint32 | λ .  SHA384 () ->  338uint32 | λ .  SHA512 () ->  338uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of state1, after the definition of h0, in the last element of the sequence, after the definition of hinit, in top-level declaration Crypto.HMAC.hmac_part2, in file Crypto_HKDF_Crypto_HMAC: stack newbuf 0uint32 match @5 with | λ .  SHA256 () ->  137uint32 | λ .  SHA384 () ->  338uint32 | λ .  SHA512 () ->  338uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of ipad, after the definition of h0, in the last element of the sequence, after the definition of h00, in top-level declaration Crypto.HMAC.hmac_core, in file Crypto_HKDF_Crypto_HMAC: stack newbuf 0x36uint8 Crypto.HMAC.block_size @6 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of opad, after the definition of ipad, in the last element of the sequence, after the definition of h00, in top-level declaration Crypto.HMAC.hmac_core, in file Crypto_HKDF_Crypto_HMAC: stack newbuf 0x5cuint8 Crypto.HMAC.block_size @7 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of nkey, in the last element of the sequence, in top-level declaration Crypto.HMAC.hmac, in file Crypto_HKDF_Crypto_HMAC: stack newbuf 0x00uint8 Crypto.HMAC.block_size @5 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of keyBuffer, after the definition of h0, in the last element of the sequence, after the definition of macId, in top-level declaration Crypto.Symmetric.PRF.prf_mac, in file Crypto_AEAD_Main_Crypto_Symmetric_Cipher_Crypto_Indexing: stack newbuf 0uint8 Crypto.Symmetric.UF1CMA.keylen @5 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 15: : Crypto.AEAD.Invariant.safelen is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Crypto.AEAD.Invariant.maxplain is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.pow2 is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_LessThanOrEqual is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Addition is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Multiply is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 6: in top-level declaration Crypto.Plain.create, in file Crypto_AEAD_Main: stack newbuf @1 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of keyBuffer, after the definition of h0, in the last element of the sequence, after the definition of macId, in top-level declaration Crypto.Symmetric.PRF.prf_mac, in file Crypto_AEAD_Main: stack newbuf 0uint8 Crypto.Symmetric.UF1CMA.keylen @5 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of cipher1, after the definition of cipherlen, in the last element of the sequence, in top-level declaration KrmlTest.test, in file KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of cipher1, after the definition of cipherlen, in the last element of the sequence, in top-level declaration KrmlTest.test_aes_gcm, in file KrmlTest: stack newbuf 2uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of plain, after the definition of plainlen, in top-level declaration KrmlTest.test_aes_gcm_0, in file KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration KrmlTest.test_aes_gcm_0, in file KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of plain, after the definition of plainlen, in top-level declaration KrmlTest.test_aes_gcm_1, in file KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration KrmlTest.test_aes_gcm_1, in file KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of plain, after the definition of plainlen, in top-level declaration KrmlTest.test_aes_gcm_2, in file KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration KrmlTest.test_aes_gcm_2, in file KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of aad, after the definition of aadlen, in top-level declaration KrmlTest.test_aes_gcm_3, in file KrmlTest: stack newbuf 0uint8 @0 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 7: : After inlining, Crypto.Symmetric.MAC.update (going into Crypto_AEAD_Main) calls Hacl.Impl.Poly1305_64.State.poly1305_state (going into Hacl_Impl_Poly1305_64_Hacl_Impl_Chacha20) -- removing the static qualifier from Hacl.Impl.Poly1305_64.State.poly1305_state
Warning 8: : After inlining, Crypto.Symmetric.MAC.update (going into Crypto_AEAD_Main) calls Hacl.Impl.Poly1305_64.poly1305_update (going into Hacl_Impl_Poly1305_64_Hacl_Impl_Chacha20). This is a call across translation units but Hacl.Impl.Poly1305_64.poly1305_update has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Poly1305_64.poly1305_update from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 8: : After inlining, Crypto.Symmetric.MAC.finish (going into Crypto_AEAD_Main) calls Hacl.Impl.Poly1305_64.poly1305_process_last_block (going into Hacl_Impl_Poly1305_64_Hacl_Impl_Chacha20). This is a call across translation units but Hacl.Impl.Poly1305_64.poly1305_process_last_block has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Poly1305_64.poly1305_process_last_block from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_AEAD_Main) calls Hacl.Impl.Chacha20.setup (going into Hacl_Impl_Poly1305_64_Hacl_Impl_Chacha20). This is a call across translation units but Hacl.Impl.Chacha20.setup has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Chacha20.setup from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_AEAD_Main) calls Hacl.Impl.Chacha20.copy_state (going into Hacl_Impl_Poly1305_64_Hacl_Impl_Chacha20). This is a call across translation units but Hacl.Impl.Chacha20.copy_state has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Chacha20.copy_state from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_AEAD_Main) calls Hacl.Impl.Chacha20.rounds (going into Hacl_Impl_Poly1305_64_Hacl_Impl_Chacha20). This is a call across translation units but Hacl.Impl.Chacha20.rounds has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Chacha20.rounds from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 8: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_AEAD_Main) calls Hacl.Impl.Chacha20.sum_states (going into Hacl_Impl_Poly1305_64_Hacl_Impl_Chacha20). This is a call across translation units but Hacl.Impl.Chacha20.sum_states has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Chacha20.sum_states from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 7: : After inlining, Crypto.Symmetric.Cipher.compute (going into Crypto_AEAD_Main) calls Hacl.Lib.LoadStore32.uint32s_to_le_bytes (going into Hacl_Impl_Poly1305_64_Hacl_Impl_Chacha20) -- removing the static qualifier from Hacl.Lib.LoadStore32.uint32s_to_le_bytes
Warning 7: : After inlining, KrmlTest.test (going into KrmlTest) calls Crypto.Indexing.id (going into Crypto_AEAD_Main) -- removing the static qualifier from Crypto.Indexing.id
Warning 7: : After inlining, KrmlTest.test (going into KrmlTest) calls Crypto.Indexing.aeadAlg (going into Crypto_AEAD_Main) -- removing the static qualifier from Crypto.Indexing.aeadAlg
Warning 7: : After inlining, KrmlTest.test (going into KrmlTest) calls Crypto.Indexing.testId (going into Crypto_AEAD_Main) -- removing the static qualifier from Crypto.Indexing.testId
Warning 7: : After inlining, KrmlTest.test (going into KrmlTest) calls Crypto.Plain.unsafe_hide_buffer (going into Crypto_AEAD_Main) -- removing the static qualifier from Crypto.Plain.unsafe_hide_buffer
Warning 7: : After inlining, KrmlTest.test (going into KrmlTest) calls Crypto.Symmetric.Bytes.load_bytes (going into Crypto_AEAD_Main) -- removing the static qualifier from Crypto.Symmetric.Bytes.load_bytes
Warning 7: : After inlining, KrmlTest.test (going into KrmlTest) calls Crypto.Symmetric.Bytes.load_uint128 (going into Crypto_AEAD_Main) -- removing the static qualifier from Crypto.Symmetric.Bytes.load_uint128
Warning 7: : After inlining, KrmlTest.test (going into KrmlTest) calls Crypto.AEAD.Invariant.aead_state (going into Crypto_AEAD_Main) -- removing the static qualifier from Crypto.AEAD.Invariant.aead_state
Warning 7: : After inlining, KrmlTest.test (going into KrmlTest) calls Crypto.Plain.bufferRepr (going into Crypto_AEAD_Main) -- removing the static qualifier from Crypto.Plain.bufferRepr
Warning 7: : After inlining, Flag.cipher_prf (going into Flag) calls Crypto.Indexing.cipherAlg (going into Crypto_AEAD_Main) -- removing the static qualifier from Crypto.Indexing.cipherAlg
Warning 7: : After inlining, Flag.mac_int1cma (going into Flag) calls Crypto.Indexing.macAlg (going into Crypto_AEAD_Main) -- removing the static qualifier from Crypto.Indexing.macAlg
Warning 15: : Crypto.AEAD.Invariant.safelen is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Crypto.AEAD.Invariant.maxplain is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.cons__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.append__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.empty__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.seq__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.list__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.pow2 is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_LessThanOrEqual is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Addition is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Subtraction is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Multiply is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : C.String.of_literal is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
evercrypt/fst/EverCrypt.HKDF.fst(143,2-150,13): (Warning 252) (Hint-replay failed): could not prove post-condition (see also C:\build\agent2\_work\34\s\providers\evercrypt\EverCrypt.HKDF.fsti(142,4-142,69))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
(FStar.Seq.Base.slice s1
0
(0 +
FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a)))
(FStar.Seq.Base.slice s2
0
(0 +
FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))) contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(237,35-238,70))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
s
(FStar.Seq.Properties.replace_subseq s
0
(0 +
FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
s2) contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(243,34-243,99))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
(FStar.Seq.Base.slice s
0
(0 +
FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a)))
s2 contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(242,39-242,97))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
(FStar.Seq.Base.slice s1
0
(0 +
FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a)))
(FStar.Seq.Base.slice s2
0
(0 +
FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))) contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(237,35-238,70))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
s
(FStar.Seq.Properties.replace_subseq s
0
(0 +
FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
s2) contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(243,34-243,99))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
(FStar.Seq.Base.slice s
0
(0 +
FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a)))
s2 contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(242,39-242,97))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
(FStar.Seq.Base.slice s1
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a) +
FStar.UInt32.v (FStar.UInt32.sub (EverCrypt.Hash.blockLen a)
(if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))))
(FStar.Seq.Base.slice s2
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a) +
FStar.UInt32.v (FStar.UInt32.sub (EverCrypt.Hash.blockLen a)
(if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a)))) contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(237,35-238,70))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
s
(FStar.Seq.Properties.replace_subseq s
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a) +
FStar.UInt32.v (FStar.UInt32.sub (EverCrypt.Hash.blockLen a)
(if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a)))
s2) contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(243,34-243,99))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
(FStar.Seq.Base.slice s
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a) +
FStar.UInt32.v (FStar.UInt32.sub (EverCrypt.Hash.blockLen a)
(if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))))
s2 contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(242,39-242,97))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
(FStar.Seq.Base.slice s1
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a) +
FStar.UInt32.v (FStar.UInt32.sub (EverCrypt.Hash.blockLen a)
(if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))))
(FStar.Seq.Base.slice s2
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a) +
FStar.UInt32.v (FStar.UInt32.sub (EverCrypt.Hash.blockLen a)
(if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a)))) contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(237,35-238,70))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
s
(FStar.Seq.Properties.replace_subseq s
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a) +
FStar.UInt32.v (FStar.UInt32.sub (EverCrypt.Hash.blockLen a)
(if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a)))
s2) contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(243,34-243,99))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
(FStar.Seq.Base.slice s
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a) +
FStar.UInt32.v (FStar.UInt32.sub (EverCrypt.Hash.blockLen a)
(if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))))
s2 contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(242,39-242,97))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern FStar.Seq.Base.index (FStar.Seq.Base.create (EverCrypt.Hash.blockLength a -
FStar.Integers.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
(FStar.UInt8.uint_to_t 0))
i contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also FStar.Seq.Base.fst(202,73-202,85))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
(FStar.Seq.Base.slice s1
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a) +
FStar.UInt32.v (FStar.UInt32.sub (EverCrypt.Hash.blockLen a)
(if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))))
(FStar.Seq.Base.slice s2
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a) +
FStar.UInt32.v (FStar.UInt32.sub (EverCrypt.Hash.blockLen a)
(if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a)))) contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(237,35-238,70))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
s
(FStar.Seq.Properties.replace_subseq s
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a) +
FStar.UInt32.v (FStar.UInt32.sub (EverCrypt.Hash.blockLen a)
(if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a)))
s2) contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(243,34-243,99))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
(FStar.Seq.Base.slice s
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
(FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a) +
FStar.UInt32.v (FStar.UInt32.sub (EverCrypt.Hash.blockLen a)
(if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))))
s2 contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(242,39-242,97))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
(FStar.Seq.Base.slice s1
0
(0 +
FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a)))
(FStar.Seq.Base.slice s2
0
(0 +
FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))) contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(237,35-238,70))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
s
(FStar.Seq.Properties.replace_subseq s
0
(0 +
FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a))
s2) contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(243,34-243,99))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(96,2-97,56): (Warning 271) Pattern LowStar.Buffer.trivial_preorder EverCrypt.Helpers.uint8_t
(FStar.Seq.Base.slice s
0
(0 +
FStar.UInt32.v (if FStar.UInt32.lte len (EverCrypt.Hash.blockLen a)
then len
else EverCrypt.Hash.tagLen a)))
s2 contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FreeV @x3) (EverCrypt.Hash.tagLen (FreeV @x0)))); dropping it (see also LowStar.Monotonic.Buffer.fsti(242,39-242,97))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.HMAC.fst(312,28-312,31): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type l:
FStar.UInt32.t{FStar.UInt32.v l = FStar.Buffer.length a /\ FStar.UInt32.v l = FStar.Buffer.length b}; got type len:
FStar.UInt32.t
{ FStar.Integers.v len = LowStar.Monotonic.Buffer.length a /\
FStar.Integers.v len = LowStar.Monotonic.Buffer.length b } (see also C:/build/agent2/_work/34/s/kremlin/kremlib/compat/C.Loops.fst(326,15-326,45))
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Spec.Bignum.AddAndMultiply.fst(57,6-57,20): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.Seq.Base.fst(202,87-202,113))
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Spec.Bignum.AddAndMultiply.fst(57,6-57,20): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.Seq.Base.fst(202,87-202,113))
C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\specs\Spec.Lib.fst.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.Lib.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.Chacha20.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\specs\Spec.Chacha20.Lemmas.fst.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.Chacha20.Lemmas.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.CTR.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\specs\Spec.CTR.fst.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.CTR.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.Curve25519.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\specs\Spec.Curve25519.fst.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.Curve25519.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\Spec.Lib.fst.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.Lib.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(190,61-190,68): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Prims.nat; got type Prims.int (see also prims.fst(408,17-408,23))
C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(192,4-192,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(191,2-191,38))
C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(201,3-201,16): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Prims.nat; got type Prims.int (see also prims.fst(408,17-408,23))
C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(209,61-209,68): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Prims.nat; got type Prims.int (see also prims.fst(408,17-408,23))
C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(211,4-211,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(210,2-210,38))
C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(220,3-220,16): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Prims.nat; got type Prims.int (see also prims.fst(408,17-408,23))
C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(228,61-228,68): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Prims.nat; got type Prims.int (see also prims.fst(408,17-408,23))
C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(230,4-230,6): (Warning 252) (Hint-replay failed): could not prove post-condition (see also C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(229,2-229,38))
C:/build/agent2/_work/34/s/specs/Spec.Lib.fst(239,3-239,16): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Prims.nat; got type Prims.int (see also prims.fst(408,17-408,23))
C:/build/agent2/_work/34/s/specs/Spec.Chacha20.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\specs\Spec.Chacha20.fst.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.Chacha20.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.Chacha20.Lemmas.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\Spec.Chacha20.Lemmas.fst.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.Chacha20.Lemmas.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.CTR.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\Spec.CTR.fst.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.CTR.fst and all subsequent files
Not extracting Spec.Chacha20.rounds to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
C:/build/agent2/_work/34/s/specs/Spec.Chacha20Poly1305.fst(0,0-0,0): (Warning 241) Stale cache file C:\build\agent2\_work\34\s\specs\Spec.Chacha20Poly1305.fst.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.Chacha20Poly1305.fst and all subsequent files
C:/build/agent2/_work/34/s/specs/Spec.Chacha20.fst(0,0-0,0): (Warning 241) Stale cache file ..\specs\Spec.Chacha20.fst.checked; will recheck C:/build/agent2/_work/34/s/specs/Spec.Chacha20.fst and all subsequent files
C:/build/agent2/_work/34/s/code/api/Hacl.Chacha20Poly1305.fst(65,141-65,142): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Spec.Poly1305.elem; got type FStar.UInt.uint_t 128 (see also C:/build/agent2/_work/34/s/specs/Spec.Poly1305.fst(16,28-16,37))
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Impl.Poly1305_64.fst(130,11-130,25): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.Seq.Base.fst(202,87-202,113))
C:/build/agent2/_work/34/s/providers/evercrypt/fst/EverCrypt.Hash.fst(447,22-447,26): (Warning 252) (Hint-replay failed): assertion failed (see also C:/build/agent2/_work/34/s/code/hash/interfaces/Hacl.SHA2_256.fsti(171,6-171,18))
C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.MAC.fst(46,31-46,42): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.MAC.fst(505,40-505,51): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.MAC.fst(46,2-48,56): (Warning 271) Pattern FStar.Seq.Base.index (if FStar.Seq.Base.length t = 0
then
FStar.Seq.Base.empty
<:
Prims.Tot (s: FStar.Seq.Base.seq Spec.Poly1305.word {FStar.Seq.Base.length s = 0})
else
FStar.Seq.Properties.cons (FStar.Seq.Properties.head t)
(Crypto.Symmetric.MAC.text_to_PS_text (FStar.Seq.Properties.tail t)))
i contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FStar.Seq.Base.empty (FreeV Spec.Poly1305.word)) (FStar.Seq.Properties.cons (FreeV Spec.Poly1305.word) (FStar.Seq.Properties.head (Crypto.Symmetric.Bytes.lbytes (BoxInt (Integer 16))) (x_5dca6f40a2753b7743c09d91ef7c0e4f_0 )) (Crypto.Symmetric.MAC.text_to_PS_text (FStar.Seq.Properties.tail (Crypto.Symmetric.Bytes.lbytes (BoxInt (Integer 16))) (x_5dca6f40a2753b7743c09d91ef7c0e4f_0 )))))); dropping it (see also C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.MAC.fst(42,28-42,42))
C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.MAC.fst(46,2-48,56): (Warning 271) Pattern FStar.Seq.Base.index (if FStar.Seq.Base.length t = 0
then
FStar.Seq.Base.empty
<:
Prims.Tot (s: FStar.Seq.Base.seq Spec.Poly1305.word {FStar.Seq.Base.length s = 0})
else
FStar.Seq.Properties.cons (FStar.Seq.Properties.head t)
(Crypto.Symmetric.MAC.text_to_PS_text (FStar.Seq.Properties.tail t)))
i contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FStar.Seq.Base.empty (FreeV Spec.Poly1305.word)) (FStar.Seq.Properties.cons (FreeV Spec.Poly1305.word) (FStar.Seq.Properties.head (Crypto.Symmetric.Bytes.lbytes (BoxInt (Integer 16))) (x_5dca6f40a2753b7743c09d91ef7c0e4f_0 )) (Crypto.Symmetric.MAC.text_to_PS_text (FStar.Seq.Properties.tail (Crypto.Symmetric.Bytes.lbytes (BoxInt (Integer 16))) (x_5dca6f40a2753b7743c09d91ef7c0e4f_0 )))))); dropping it (see also C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.MAC.fst(42,28-42,42))
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Impl.Poly1305_64.fst(130,11-130,25): (Warning 252) (Hint-replay failed): assertion failed (see also FStar.Seq.Base.fst(202,87-202,113))
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_256.fst(1016,11-1016,25): (Warning 271) Pattern FStar.Seq.Base.index (if FStar.UInt32.lt len (FStar.UInt32.uint_to_t 56)
then
FStar.Seq.Base.create (FStar.UInt32.v Hacl.Impl.SHA2_256.size_block) (FStar.UInt8.uint_to_t 0)
else
FStar.Seq.Base.create (FStar.UInt32.v Hacl.Impl.SHA2_256.size_block +
FStar.UInt32.v Hacl.Impl.SHA2_256.size_block)
(FStar.UInt8.uint_to_t 0))
i contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FStar.Seq.Base.create (FreeV FStar.UInt8.t) (FStar.UInt32.v (FreeV Hacl.Impl.SHA2_256.size_block)) (FStar.UInt8.uint_to_t (BoxInt (Integer 0)))) (FStar.Seq.Base.create (FreeV FStar.UInt8.t) (Prims.op_Addition (FStar.UInt32.v (FreeV Hacl.Impl.SHA2_256.size_block)) (FStar.UInt32.v (FreeV Hacl.Impl.SHA2_256.size_block))) (FStar.UInt8.uint_to_t (BoxInt (Integer 0)))))); dropping it (see also FStar.Seq.Base.fst(202,73-202,85))
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_256.fst(1020,11-1020,25): (Warning 271) Pattern FStar.Seq.Base.index (FStar.Seq.Base.create (FStar.UInt32.v (if
FStar.UInt32.lt len (FStar.UInt32.uint_to_t 56)
then FStar.UInt32.uint_to_t 1 <: Prims.Tot FStar.UInt32.t
else FStar.UInt32.uint_to_t 2 <: Prims.Tot FStar.UInt32.t) *
FStar.UInt32.v Hacl.Impl.SHA2_256.size_block)
(FStar.UInt8.uint_to_t 0))
i contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FStar.UInt32.uint_to_t (BoxInt (Integer 1))) (FStar.UInt32.uint_to_t (BoxInt (Integer 2))))); dropping it (see also FStar.Seq.Base.fst(202,73-202,85))
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_256.fst(1056,11-1056,25): (Warning 271) Pattern FStar.Seq.Base.index (FStar.Seq.Base.slice (FStar.Buffer.as_seq a return_val)
(FStar.UInt32.v len)
(FStar.UInt32.v (if FStar.UInt32.lt len (FStar.UInt32.uint_to_t 56)
then FStar.UInt32.uint_to_t 1 <: Prims.Tot FStar.UInt32.t
else FStar.UInt32.uint_to_t 2 <: Prims.Tot FStar.UInt32.t) *
FStar.UInt32.v Hacl.Impl.SHA2_256.size_block))
i contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FStar.UInt32.uint_to_t (BoxInt (Integer 1))) (FStar.UInt32.uint_to_t (BoxInt (Integer 2))))); dropping it (see also FStar.Seq.Base.fst(202,73-202,85))
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_256.fst(1057,11-1057,25): (Warning 271) Pattern FStar.Seq.Base.index (FStar.Seq.Base.slice (FStar.Buffer.as_seq a return_val)
(FStar.UInt32.v len)
(FStar.UInt32.v (if FStar.UInt32.lt len (FStar.UInt32.uint_to_t 56)
then FStar.UInt32.uint_to_t 1 <: Prims.Tot FStar.UInt32.t
else FStar.UInt32.uint_to_t 2 <: Prims.Tot FStar.UInt32.t) *
FStar.UInt32.v Hacl.Impl.SHA2_256.size_block))
i contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FStar.UInt32.uint_to_t (BoxInt (Integer 1))) (FStar.UInt32.uint_to_t (BoxInt (Integer 2))))); dropping it (see also FStar.Seq.Base.fst(202,73-202,85))
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_512.fst(1066,11-1066,25): (Warning 271) Pattern FStar.Seq.Base.index (if FStar.UInt32.lt len (FStar.UInt32.uint_to_t 112)
then
FStar.Seq.Base.create (FStar.UInt32.v Hacl.Impl.SHA2_512.size_block) (FStar.UInt8.uint_to_t 0)
else
FStar.Seq.Base.create (FStar.UInt32.v Hacl.Impl.SHA2_512.size_block +
FStar.UInt32.v Hacl.Impl.SHA2_512.size_block)
(FStar.UInt8.uint_to_t 0))
i contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FStar.Seq.Base.create (FreeV FStar.UInt8.t) (FStar.UInt32.v (FreeV Hacl.Impl.SHA2_512.size_block)) (FStar.UInt8.uint_to_t (BoxInt (Integer 0)))) (FStar.Seq.Base.create (FreeV FStar.UInt8.t) (Prims.op_Addition (FStar.UInt32.v (FreeV Hacl.Impl.SHA2_512.size_block)) (FStar.UInt32.v (FreeV Hacl.Impl.SHA2_512.size_block))) (FStar.UInt8.uint_to_t (BoxInt (Integer 0)))))); dropping it (see also FStar.Seq.Base.fst(202,73-202,85))
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_512.fst(1070,11-1070,25): (Warning 271) Pattern FStar.Seq.Base.index (FStar.Seq.Base.create (FStar.UInt32.v (if
FStar.UInt32.lt len (FStar.UInt32.uint_to_t 112)
then FStar.UInt32.uint_to_t 1 <: Prims.Tot FStar.UInt32.t
else FStar.UInt32.uint_to_t 2 <: Prims.Tot FStar.UInt32.t) *
FStar.UInt32.v Hacl.Impl.SHA2_512.size_block)
(FStar.UInt8.uint_to_t 0))
i contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FStar.UInt32.uint_to_t (BoxInt (Integer 1))) (FStar.UInt32.uint_to_t (BoxInt (Integer 2))))); dropping it (see also FStar.Seq.Base.fst(202,73-202,85))
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_512.fst(1110,11-1110,25): (Warning 271) Pattern FStar.Seq.Base.index (FStar.Seq.Base.slice (FStar.Buffer.as_seq a return_val)
(FStar.UInt32.v len)
(FStar.UInt32.v (if FStar.UInt32.lt len (FStar.UInt32.uint_to_t 112)
then FStar.UInt32.uint_to_t 1 <: Prims.Tot FStar.UInt32.t
else FStar.UInt32.uint_to_t 2 <: Prims.Tot FStar.UInt32.t) *
FStar.UInt32.v Hacl.Impl.SHA2_512.size_block))
i contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FStar.UInt32.uint_to_t (BoxInt (Integer 1))) (FStar.UInt32.uint_to_t (BoxInt (Integer 2))))); dropping it (see also FStar.Seq.Base.fst(202,73-202,85))
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_512.fst(1111,11-1111,25): (Warning 271) Pattern FStar.Seq.Base.index (FStar.Seq.Base.slice (FStar.Buffer.as_seq a return_val)
(FStar.UInt32.v len)
(FStar.UInt32.v (if FStar.UInt32.lt len (FStar.UInt32.uint_to_t 112)
then FStar.UInt32.uint_to_t 1 <: Prims.Tot FStar.UInt32.t
else FStar.UInt32.uint_to_t 2 <: Prims.Tot FStar.UInt32.t) *
FStar.UInt32.v Hacl.Impl.SHA2_512.size_block))
i contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FStar.UInt32.uint_to_t (BoxInt (Integer 1))) (FStar.UInt32.uint_to_t (BoxInt (Integer 2))))); dropping it (see also FStar.Seq.Base.fst(202,73-202,85))
C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.UF1CMA.fst(388,31-388,42): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.UF1CMA.fst(401,61-401,72): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.UF1CMA.fst(404,68-404,79): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/uf1cma/Crypto.Symmetric.UF1CMA.fst(455,15-455,26): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_384.fst(1084,11-1084,25): (Warning 271) Pattern FStar.Seq.Base.index (if FStar.UInt32.lt len (FStar.UInt32.uint_to_t 112)
then
FStar.Seq.Base.create (FStar.UInt32.v Hacl.Impl.SHA2_384.size_block) (FStar.UInt8.uint_to_t 0)
else
FStar.Seq.Base.create (FStar.UInt32.v Hacl.Impl.SHA2_384.size_block +
FStar.UInt32.v Hacl.Impl.SHA2_384.size_block)
(FStar.UInt8.uint_to_t 0))
i contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FStar.Seq.Base.create (FreeV FStar.UInt8.t) (FStar.UInt32.v (FreeV Hacl.Impl.SHA2_384.size_block)) (FStar.UInt8.uint_to_t (BoxInt (Integer 0)))) (FStar.Seq.Base.create (FreeV FStar.UInt8.t) (Prims.op_Addition (FStar.UInt32.v (FreeV Hacl.Impl.SHA2_384.size_block)) (FStar.UInt32.v (FreeV Hacl.Impl.SHA2_384.size_block))) (FStar.UInt8.uint_to_t (BoxInt (Integer 0)))))); dropping it (see also FStar.Seq.Base.fst(202,73-202,85))
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_384.fst(1088,11-1088,25): (Warning 271) Pattern FStar.Seq.Base.index (FStar.Seq.Base.create (FStar.UInt32.v (if
FStar.UInt32.lt len (FStar.UInt32.uint_to_t 112)
then FStar.UInt32.uint_to_t 1 <: Prims.Tot FStar.UInt32.t
else FStar.UInt32.uint_to_t 2 <: Prims.Tot FStar.UInt32.t) *
FStar.UInt32.v Hacl.Impl.SHA2_384.size_block)
(FStar.UInt8.uint_to_t 0))
i contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FStar.UInt32.uint_to_t (BoxInt (Integer 1))) (FStar.UInt32.uint_to_t (BoxInt (Integer 2))))); dropping it (see also FStar.Seq.Base.fst(202,73-202,85))
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_384.fst(1126,11-1126,25): (Warning 271) Pattern FStar.Seq.Base.index (FStar.Seq.Base.slice (FStar.Buffer.as_seq a return_val)
(FStar.UInt32.v len)
(FStar.UInt32.v (if FStar.UInt32.lt len (FStar.UInt32.uint_to_t 112)
then FStar.UInt32.uint_to_t 1 <: Prims.Tot FStar.UInt32.t
else FStar.UInt32.uint_to_t 2 <: Prims.Tot FStar.UInt32.t) *
FStar.UInt32.v Hacl.Impl.SHA2_384.size_block))
i contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FStar.UInt32.uint_to_t (BoxInt (Integer 1))) (FStar.UInt32.uint_to_t (BoxInt (Integer 2))))); dropping it (see also FStar.Seq.Base.fst(202,73-202,85))
C:/build/agent2/_work/34/s/code/hash/Hacl.Impl.SHA2_384.fst(1127,11-1127,25): (Warning 271) Pattern FStar.Seq.Base.index (FStar.Seq.Base.slice (FStar.Buffer.as_seq a return_val)
(FStar.UInt32.v len)
(FStar.UInt32.v (if FStar.UInt32.lt len (FStar.UInt32.uint_to_t 112)
then FStar.UInt32.uint_to_t 1 <: Prims.Tot FStar.UInt32.t
else FStar.UInt32.uint_to_t 2 <: Prims.Tot FStar.UInt32.t) *
FStar.UInt32.v Hacl.Impl.SHA2_384.size_block))
i contains illegal sub-term ((ite (= (BoundV 0) (BoxBool (true ))) (FStar.UInt32.uint_to_t (BoxInt (Integer 1))) (FStar.UInt32.uint_to_t (BoxInt (Integer 2))))); dropping it (see also FStar.Seq.Base.fst(202,73-202,85))
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Standalone.Poly1305_64.fst(121,2-146,3): (Warning 252) (Hint-replay failed): could not prove post-condition (see also C:/build/agent2/_work/34/s/code/poly1305/Hacl.Standalone.Poly1305_64.fst(103,43-103,64))
C:/build/agent2/_work/34/s/code/poly1305/Hacl.Standalone.Poly1305_64.fst(174,31-174,59): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Hacl.Spec.Poly1305_64.State.elem; got type Prims.nat (see also C:/build/agent2/_work/34/s/code/poly1305/Hacl.Spec.Poly1305_64.State.fst(29,36-29,50))
C:/build/agent2/_work/34/s/secure_api/prf/Crypto.Symmetric.PRF.fst(177,36-177,47): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/prf/Crypto.Symmetric.PRF.fst(212,47-212,58): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
Warning 15: : FStar.Seq.Base.seq__any is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.list__any is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.seq__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.list__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 10: : -drop is deprecated
use a combination of -bundle and -d reachability to make sure the functions are eliminated as you wish
Warning 6: in the definition of ipad, after the definition of h01, in the last element of the sequence, after the definition of h00, in top-level declaration EverCrypt.HMAC.hmac_core, in file EverCrypt_HMAC: stack newbuf 0x36uint8 EverCrypt.Hash.blockLen @7 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of opad, after the definition of h02, in the last element of the sequence, after the definition of h00, in top-level declaration EverCrypt.HMAC.hmac_core, in file EverCrypt_HMAC: stack newbuf 0x5cuint8 EverCrypt.Hash.blockLen @9 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of keyblock, in the last element of the sequence, after the definition of h00, in top-level declaration EverCrypt.HMAC.compute, in file EverCrypt_HMAC: stack newbuf 0x00uint8 EverCrypt.Hash.blockLen @6 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of text, after the definition of tlen, in the last element of the sequence, in top-level declaration EverCrypt.HKDF.hkdf_expand, in file EverCrypt_HKDF: stack newbuf 0uint8 (+,uint32) (+,uint32) @0 @2 1uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of plaintext', after the definition of iv', in the sequence statement at index 2, after the definition of expanded, in the last element of the sequence, after the definition of i, in top-level declaration EverCrypt.aes128_gcm_encrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @5 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of cipher', after the definition of plaintext', in the sequence statement at index 2, after the definition of expanded, in the last element of the sequence, after the definition of i, in top-level declaration EverCrypt.aes128_gcm_encrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @6 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of ad', after the definition of cipher', in the sequence statement at index 2, after the definition of expanded, in the last element of the sequence, after the definition of i, in top-level declaration EverCrypt.aes128_gcm_encrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @9 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of plaintext', after the definition of iv', in the last element of the sequence, in the definition of r, in the last element of the sequence, after the definition of expanded, in the last element of the sequence, after the definition of i, in top-level declaration EverCrypt.aes128_gcm_decrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @5 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of cipher', after the definition of plaintext', in the last element of the sequence, in the definition of r, in the last element of the sequence, after the definition of expanded, in the last element of the sequence, after the definition of i, in top-level declaration EverCrypt.aes128_gcm_decrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @6 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of ad', after the definition of cipher', in the last element of the sequence, in the definition of r, in the last element of the sequence, after the definition of expanded, in the last element of the sequence, after the definition of i, in top-level declaration EverCrypt.aes128_gcm_decrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @9 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of plaintext', after the definition of iv', in the sequence statement at index 2, after the definition of expanded, in the last element of the sequence, after the definition of i, in top-level declaration EverCrypt.aes256_gcm_encrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @5 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of cipher', after the definition of plaintext', in the sequence statement at index 2, after the definition of expanded, in the last element of the sequence, after the definition of i, in top-level declaration EverCrypt.aes256_gcm_encrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @6 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of ad', after the definition of cipher', in the sequence statement at index 2, after the definition of expanded, in the last element of the sequence, after the definition of i, in top-level declaration EverCrypt.aes256_gcm_encrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @9 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of plaintext', after the definition of iv', in the last element of the sequence, in the definition of r, in the last element of the sequence, after the definition of expanded, in the last element of the sequence, after the definition of i, in top-level declaration EverCrypt.aes256_gcm_decrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @5 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of cipher', after the definition of plaintext', in the last element of the sequence, in the definition of r, in the last element of the sequence, after the definition of expanded, in the last element of the sequence, after the definition of i, in top-level declaration EverCrypt.aes256_gcm_decrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @6 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of ad', after the definition of cipher', in the last element of the sequence, in the definition of r, in the last element of the sequence, after the definition of expanded, in the last element of the sequence, after the definition of i, in top-level declaration EverCrypt.aes256_gcm_decrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @9 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of plaintext', after the definition of iv', in the last element of the sequence, after the definition of xk, in top-level declaration EverCrypt.aead_encrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @5 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of cipher', after the definition of plaintext', in the last element of the sequence, after the definition of xk, in top-level declaration EverCrypt.aead_encrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @6 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of ad', after the definition of cipher', in the last element of the sequence, after the definition of xk, in top-level declaration EverCrypt.aead_encrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @9 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of plaintext', after the definition of iv', in the last element of the sequence, after the definition of xk, in top-level declaration EverCrypt.aead_encrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @6 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of cipher', after the definition of plaintext', in the last element of the sequence, after the definition of xk, in top-level declaration EverCrypt.aead_encrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @7 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of ad', after the definition of cipher', in the last element of the sequence, after the definition of xk, in top-level declaration EverCrypt.aead_encrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @10 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of plaintext', after the definition of iv', in the last element of the sequence, after the definition of xk, in top-level declaration EverCrypt.aead_decrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @5 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of cipher', after the definition of plaintext', in the last element of the sequence, after the definition of xk, in top-level declaration EverCrypt.aead_decrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @6 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of ad', after the definition of cipher', in the last element of the sequence, after the definition of xk, in top-level declaration EverCrypt.aead_decrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @9 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of plaintext', after the definition of iv', in the last element of the sequence, after the definition of xk, in top-level declaration EverCrypt.aead_decrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @6 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of cipher', after the definition of plaintext', in the last element of the sequence, after the definition of xk, in top-level declaration EverCrypt.aead_decrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @7 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of ad', after the definition of cipher', in the last element of the sequence, after the definition of xk, in top-level declaration EverCrypt.aead_decrypt, in file EverCrypt: stack newbuf 0uint8 (*,uint32) (/,uint32) (+,uint32) @10 15uint32 16uint32 16uint32 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 8: : After inlining, AEAD.Poly1305_64.pad_last (going into AEAD_Poly1305_64) calls Hacl.Impl.Poly1305_64.poly1305_update (going into Hacl). This is a call across translation units but Hacl.Impl.Poly1305_64.poly1305_update has a C "inline" qualifier. The C standard allows removing Hacl.Impl.Poly1305_64.poly1305_update from its translation unit (see C11 6.7.3 §5), and CompCert will do it. 
Warning 15: : FStar.Seq.Base.seq__any is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.list__any is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : FStar.Seq.Base.seq__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.list__uint8_t is not Low*; it uses a garbage-collected type (e.g. list) and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.string_of_int is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.string_of_int is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : Prims.strcat is not Low*; it uses F*'s Prims.string type and will leak memory; you need to link with a garbage-collector; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions; if you are looking to use C strings, look into C.String (in kremlib/) and Server (in test/). See the KreMLin tutorial for more information.
Warning 15: : Prims.abs is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.pow2 is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_LessThan is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_GreaterThanOrEqual is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_GreaterThan is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_LessThanOrEqual is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Modulus is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Minus is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Addition is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Subtraction is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Division is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
Warning 15: : Prims.op_Multiply is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Encoding.fst(66,8-66,19): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Encoding.fst(544,37-544,48): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Encoding.fst(552,67-552,78): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
Test.Hash.fst(12,5-12,7): (Warning 285) No modules in namespace ST and no file with that name either
Test.Hash.fst(12,5-12,7): (Warning 285) No modules in namespace ST and no file with that name either
Not extracting type definition FStar.Reflection.Types.binder to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.bv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.term to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.env to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.fv to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.comp to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.sigelt to KreMLin (assumed type)
Not extracting type definition FStar.Reflection.Types.ctx_uvar_and_subst to KreMLin (assumed type)
Not extracting type definition FStar.Ghost.erased to KreMLin (assumed type)
Not extracting FStar.Exn.raise to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Range.range to KreMLin (assumed type)
Not extracting FStar.Set.empty to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.singleton to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.union to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.intersect to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Set.complement to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Monotonic.Witnessed.get to KreMLin (assumed type)
Not extracting type definition FStar.Monotonic.Witnessed.set to KreMLin (assumed type)
Not extracting EverCrypt.StaticConfig.hacl to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting EverCrypt.StaticConfig.vale to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting EverCrypt.StaticConfig.openssl to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting EverCrypt.StaticConfig.bcrypt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Tactics.Types.proofstate to KreMLin (assumed type)
Not extracting type definition FStar.Tactics.Types.goal to KreMLin (assumed type)
Not extracting exception TacticFailure to KreMLin (exceptions unsupported)
Not extracting FStar.Tactics.Effect.__ret to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__bind to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__get to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Effect.__raise to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
(Warning 242) Not extracting __proj__TAC__item__return to KreMLin

(Warning 242) Not extracting __proj__TAC__item__bind to KreMLin

(Warning 242) Not extracting __proj__TAC__item____raise to KreMLin

(Warning 242) Not extracting __proj__TAC__item____get to KreMLin

Not extracting FStar.Tactics.Effect.synth_by_tactic to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Effect.assume_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Builtins.unquote to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.catch to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.recover to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lget to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Builtins.lset to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.Tactics.Util.iter to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting exception Failure to KreMLin (exceptions unsupported)
Not extracting FStar.All.failwith to KreMLin (polymorphic assumes are not supported)
(Warning 250) Error while extracting FStar.List.filter_map to KreMLin (Failure("Internal error: name not found filter_map_acc\n"))

(Warning 250) Error while extracting FStar.List.index to KreMLin (Failure("Internal error: name not found index1\n"))

Not extracting FStar.HyperStack.ST.gst_witness to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.ST.gst_recall to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_right to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.pipe_left to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.failwith to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.exit to KreMLin (polymorphic assumes are not supported)
Not extracting FStar.HyperStack.All.try_with to KreMLin (polymorphic assumes are not supported)
Not extracting type definition FStar.Char.char to KreMLin (assumed type)
Not extracting FStar.Reflection.Formula.mk_Forall to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Reflection.Formula.mk_Exists to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition FStar.Bytes.bytes to KreMLin (assumed type)
Not extracting FStar.Bytes.empty_bytes to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived._cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_env to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_goal_safe to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.with_policy to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.dismiss to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.flip to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.qed to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.debug to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.idtac to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.later to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.cur_module to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_uvar to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unify to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.divide to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.mapAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAll to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.iterAllSMT to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.exact_n to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.ngoals_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_bv to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder_named to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.fresh_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.norm_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.try_with to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat1 to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeat' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.join_all_smt_goals to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.discard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.repeatseq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.admit_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.is_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.skip_guard to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.guards_to_smt to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intros' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tcut to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.pose_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.for_each_binder to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.assumption to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.destruct_equality_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_eqs_from_context to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.rewrite_equality to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.unfold_def to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.l_to_r to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.grewrite to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.witness to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.finish_by to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.solve_then to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.binder_to_term to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.tlabel' to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Derived.focus_all to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.l_revert to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.forall_intro_as to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.split to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.implies_intro to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.explode to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.simplify_eq_implication to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unfold_definition_and_simplify_eq to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.unsquash to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.cases_bool to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.and_elim to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting FStar.Tactics.Logic.skolem to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition C.channel to KreMLin (assumed type)
Not extracting C.stdout to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting C.stderr to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition C.intptr_t to KreMLin (assumed type)
Not extracting C.nullptr to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition C.char to KreMLin (assumed type)
Not extracting type definition C.int to KreMLin (assumed type)
Not extracting type definition C.clock_t to KreMLin (assumed type)
Not extracting TestLib.uint8_p_null to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting TestLib.uint32_p_null to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting TestLib.uint64_p_null to KreMLin (function type annotation has less arrows than the number of arguments; please mark the return type abbreviation as inline_for_extraction)
Not extracting type definition TestLib.cycles to KreMLin (assumed type)
Not extracting type definition Test.Lowstarize.hex_encoded to KreMLin (assumed type)
Test.Hash.fst(12,5-12,7): (Warning 285) No modules in namespace ST and no file with that name either
Not extracting type definition EverCrypt.Hash.invariant_s to KreMLin (assumed type)
Test.Hash.fst(12,5-12,7): (Warning 285) No modules in namespace ST and no file with that name either
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
(Warning 272) Top-level let-bindings must be total; this term may have effects
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Invariant.fst(195,8-195,19): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Invariant.fst(603,83-603,94): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Invariant.fst(1145,51-1145,53): (Warning 252) (Hint-replay failed): could not prove post-condition (see also C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Invariant.fst(1144,12-1144,44))
Test.Hash.fst(12,5-12,7): (Warning 285) No modules in namespace ST and no file with that name either
Test.Hash.fst(12,5-12,7): (Warning 285) No modules in namespace ST and no file with that name either
Warning 6: in the definition of computed, in the last element of the sequence, after the definition of tlen, in top-level declaration Test.test_one_hash, in file Test: stack newbuf 0uint8 @1 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of total_input, in the last element of the sequence, in the sequence statement at index 0, after the definition of total_input_len, in the last element of the sequence, after the definition of tlen, in top-level declaration Test.test_one_hash, in file Test: stack newbuf 0uint8 @1 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of computed, in the last element of the sequence, after the definition of uu____1453, in top-level declaration Test.test_one_hmac, in file Test: stack newbuf 0uint8 EverCrypt.Hash.tagLen @7 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of computed_prk, after the definition of str, in the last element of the sequence, after the definition of uu____2075, in top-level declaration Test.test_one_hkdf, in file Test: stack newbuf 0uint8 EverCrypt.Hash.tagLen @13 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of computed_okm, in the last element of the sequence, in the sequence statement at index 3, after the definition of computed_prk, in the last element of the sequence, after the definition of uu____2075, in top-level declaration Test.test_one_hkdf, in file Test: stack newbuf 0uint8 @6 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of plaintext', after the definition of uu____3057, in the last element of the sequence, in top-level declaration Test.test_chacha20_poly1305, in file Test: stack newbuf 0uint8 @3 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of ciphertext', after the definition of plaintext', in the last element of the sequence, in top-level declaration Test.test_chacha20_poly1305, in file Test: stack newbuf 0uint8 @4 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of plaintext', after the definition of uu____3561, in the last element of the sequence, in top-level declaration Test.test_aes128_gcm, in file Test: stack newbuf 0uint8 @3 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of ciphertext', after the definition of plaintext', in the last element of the sequence, in top-level declaration Test.test_aes128_gcm, in file Test: stack newbuf 0uint8 @4 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of plaintext', after the definition of uu____4068, in the last element of the sequence, in top-level declaration Test.test_aes256_gcm, in file Test: stack newbuf 0uint8 @3 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of ciphertext', after the definition of plaintext', in the last element of the sequence, in top-level declaration Test.test_aes256_gcm, in file Test: stack newbuf 0uint8 @4 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of cipher', after the definition of uu____5297, in the last element of the sequence, in the last element of the sequence, in top-level declaration Test.test_chacha20, in file Test: stack newbuf 0uint8 @1 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of plaintext', after the definition of st, in the last element of the sequence, in top-level declaration Test.test_aead_st, in file Test: stack newbuf 0uint8 @5 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of ciphertext', after the definition of plaintext', in the last element of the sequence, in top-level declaration Test.test_aead_st, in file Test: stack newbuf 0uint8 @6 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 6: in the definition of tag', after the definition of ciphertext', in the last element of the sequence, in top-level declaration Test.test_aead_st, in file Test: stack newbuf 0uint8 @9 is a non-constant size, stack-allocated array; this is not supported by CompCert and requires the use of alloca(3) for MSVC
Warning 15: : Test.Bytes.test_chacha20_poly1305 is not Low*; it uses mathematical integers and runtime checks may fail; rewrite your code to use machine integers, or if you must, use -add-include '"kremlin/internal/compat.h"'; if this declaration is for specification purposes only, consider marking it noextract or using -bundle <name-of-the-module> to only keep reachable definitions.
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.EnxorDexor.fst(114,27-114,38): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.EnxorDexor.fst(527,52-527,63): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Wrappers.CMA.fst(241,26-241,33): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Crypto.Symmetric.Cipher.iv (Crypto.Symmetric.Cipher.algi (FStar.Pervasives.Native.fst i)); got type FStar.UInt128.t (see also C:/build/agent2/_work/34/s/secure_api/prf/Crypto.Symmetric.Cipher.fst(79,26-79,65))
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Wrappers.CMA.fst(245,65-245,71): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type len:
FStar.UInt32.t
{ FStar.UInt32.v (FStar.UInt32.__uint_to_t 0) + FStar.UInt32.v len <=
FStar.Buffer.length cipher_tagged }; got type Crypto.AEAD.Invariant.ok_len_32 (FStar.Pervasives.Native.fst i) (see also FStar.Buffer.fst(1010,18-1010,41))
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Wrappers.CMA.fst(289,26-289,33): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Crypto.Symmetric.Cipher.iv (Crypto.Symmetric.Cipher.algi (FStar.Pervasives.Native.fst i)); got type FStar.UInt128.t (see also C:/build/agent2/_work/34/s/secure_api/prf/Crypto.Symmetric.Cipher.fst(79,26-79,65))
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Encrypt.fst(294,44-294,50): (Warning 252) (Hint-replay failed): Subtyping check failed; expected type Crypto.AEAD.Wrappers.Encoding.mac_id; got type Crypto.Indexing.id * FStar.UInt128.t (see also C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.Wrappers.Encoding.fst(78,22-78,43))
C:/build/agent2/_work/34/s/secure_api/aead/Crypto.AEAD.fst(62,41-62,52): (Warning 288) FStar.Seq.Base.createEmpty is deprecated, use Seq.empty instead
